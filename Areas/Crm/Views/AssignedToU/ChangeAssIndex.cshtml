@using Erp.BackOffice.Crm.Models
@{
    ViewBag.Title = "AssignedToU";
    Layout = "~/Views/Shared/_PopupLayout.cshtml";

    var jsCallback = Request["jsCallback"] == null ? "" : Request["jsCallback"].ToString();
}
<style>
    .cabody label {
        color: #3f51b5;
    }
    .cabody {
        margin-left: 30px;
        margin-right: 30px;
    }

    #dvTotal label {
        font-size: 18px;
        font-weight: bold;
    }

    #idTotalLead {
        color: #428BCA;
        margin-left: 10px;
    }

    #dvTable {
        display: grid;
        margin: 30px 0 ;
    }

    #asTable th,
    #asTable td {
        padding: 10px;
        border: 1px solid #ccc;
    }

    .xssf {
        margin-top: 15px;
    }

    .deleteic {
        cursor: pointer;
        font-size: 20px;
        margin-top: 0px;
        color: red;
        text-shadow: none;
    }
    #btnPhanBo:hover,
    #btnSave:hover {
        background-color: #428BCA !important;
    }


</style>
<div class="cabody">
    <div id="dvTotal">
        <label>Tổng số hoạt động </label>
        <label id="idTotalLead">@ViewBag.Total</label>
    </div>
    <div class="xssf">
        <label style="margin-right:10px;">Loại tài khoản</label>
        <select data-val="true" data-val-required="Bắt buộc nhập" id="itype" name="itype" style="height: 30px;width:300px; ">
            <option value="">Loại tài khoản</option>
            @foreach (var itype in ViewBag.TypeAccList)
            {
                <option value="@itype.Id">@itype.Name</option>
            }
        </select>
    </div>
    <div class="xssf">
        <label style="margin-right:13px;">Tên tài khoản</label>
        <select data-val="true" data-val-required="Bắt buộc nhập" id="iAcc" name="iAcc" style="height: 30px;width:300px;">
            <option value="">Tên tài khoản</option>
        </select>
    </div>
    <div id="dvTable">
        <table id="asTable">
            <thead>
                <tr>
                    <th>Tên tài khoản</th>
                    <th>Số lượng hoạt động</th>
                    <th style="text-align:center; width:80px">Tùy chọn</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div style="margin-bottom: 20px; display: flex; bottom: 0; justify-content: flex-end; width: 90%; float: right;">
        <button class="btn-primary2" style="margin-right: 30px; padding:5px" id="btnPhanBo">Phân bố</button>
        <button class="btn-primary2" style="float:right; padding:5px 10px" id="btnSave">Lưu</button>
    </div>

</div>
<script src="~/assets/js/jquery.2.1.1.min.js"></script>
<link href="~/assets/toastr/toastr.min.css" rel="stylesheet" />
<script src="~/assets/toastr/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        var rowCount = $('#asTable tbody tr').length;
        var accList = @Html.Raw(Json.Encode(ViewBag.accList));
        $('#itype').on('change', function () {
            var selectedTypeId = $(this).val();
            var filteredAccList = accList.filter(function (acc) {
                return acc.UserTypeId == selectedTypeId;
            });

            var iAccSelect = $('#iAcc');
            iAccSelect.empty();
            iAccSelect.append($('<option>', {
                value:'',
                text:"Tên tài khoản"
            }));
            filteredAccList.forEach(function (acc) {
                iAccSelect.append($('<option>', {
                    value: acc.Id,
                    text: acc.UserName
                }));
            });
        });
        $('#iAcc').on('change', function () {
            if (rowCount <= @ViewBag.Total) {
                debugger;
                var selectedAccId = $(this).val();
                var tbTable = $('#asTable tbody');
                var existingRow = tbTable.find('tr[data-id="' + selectedAccId + '"]');
                if (existingRow.length > 0) {
                    toastr.warning('Tài khoản đã tồn tại trong bảng!', 'Thông báo');
                    return;
                } else {
                    var dataRow = $('<tr id="tr_' + rowCount + '" data-id="' + selectedAccId + '"></tr>');
                    var filteredAcc = accList.filter(function (acc) {
                        return acc.Id == selectedAccId;
                    });
                    dataRow.append('<td>' + filteredAcc[0].UserName + '</td>');
                    dataRow.append('<td>' + '<input class="sllead-input" type="number" name="SLLead" data-id="' + selectedAccId + '" id="slLead_' + rowCount + '" style="width:140px;" min="0"/>  ' + '</td>');
                    dataRow.append('<td style="text-align-last: center; ">' + '<span class="deleteic" id="del_' + selectedAccId + '"><i class="fa fa-trash"></i></span>' + '</td>');
                    tbTable.append(dataRow);
                    rowCount++;
                }
            } else {
                toastr.warning('Có quá nhiều tài khoản để phân bố tối ưu!', 'Thông báo');
            }

        });
        $(document).on('click', '.deleteic', function () {
            $(this).closest('tr').remove();
            rowCount--;
        });
        $('#btnPhanBo').on('click', function () {
            debugger;
            var sl = @ViewBag.Total;
            var sld = sl % rowCount;
            var sltt = (sl - sld) / rowCount;
            var listtemp = [];

            $('#asTable tbody tr:not(:last)').each(function () {
                listtemp.push(sltt);
            });

            if (sld > 2) {
                for (var i = 0; i < listtemp.length; i++) {
                    listtemp[i]++;
                    sld = sld - 1;
                    if (sld < 2) {
                        break;
                    }
                }
            }
            for (var i = 0; i < listtemp.length; i++) {
                $('#slLead_' + i).val(listtemp[i]).attr('data-sltt', listtemp[i]);
            }
            $('#asTable tbody tr:last').find('input[name="SLLead"]').val(sltt + sld).attr('data-sltt', sltt + sld);
        });
        function checkTotal() {
            var total = parseInt('@ViewBag.Total');
            var sum = 0;

            $('input[name="SLLead"]').each(function () {
                var value = parseInt($(this).val());
                if (!isNaN(value)) {
                    sum += value;
                }
            });

            if (sum === total) {
                return true;
            } else {
                return false;
            }
        }
        $(document).on('change', '.sllead-input', function () {
            debugger;
            var total = parseInt('@ViewBag.Total');
            var changedInput = $(this);
            var changedValue = parseInt(changedInput.val());
            //var sumOfOthers = 0;
            //$('.sllead-input').not(changedInput).each(function () {
            //    var value = parseInt($(this).val());
            //    if (!isNaN(value)) {
            //        sumOfOthers += value;
            //    }
            //});
            $(this).attr('data-sltt', changedValue);
            if (changedValue > total) {
                toastr.warning('Bạn đã nhập quá Tổng số hoạt động! Vui lòng cập nhật giá trị mới!', 'Thông báo');
                $(this).val('').attr('data-sltt', '');
            } else if (changedValue > (total - rowCount +1) && rowCount > 1) {
                toastr.warning('Bạn đã nhập giá trị không thể phân bố tối ưu! Vui lòng cập nhật giá trị mới!', 'Thông báo');
                $(this).val('').attr('data-sltt', '');
            }
            else {
                var remainingValue = total - changedValue;
                var numRemainingInputs = $('.sllead-input').not(changedInput).length;
                if (numRemainingInputs > 0) {
                    var valuePerInput = Math.floor(remainingValue / numRemainingInputs);
                    var remainder = remainingValue % numRemainingInputs;

                    $('.sllead-input').not(changedInput).each(function () {
                        $(this).val(valuePerInput);
                    });
                    if (remainder > 0) {
                        $('.sllead-input').not(changedInput).first().val(valuePerInput + remainder);
                    }
                }
            }
        });
        var valueAJ = [];
        $('#btnSave').on('click', function () {
            if (checkTotal()) {
                $('#asTable tbody tr').each(function (index) {
                    var id = $(this).find('input[name="SLLead"]').data('id');
                    var sl = $(this).find('input[name="SLLead"]').data('sltt');
                    valueAJ.push({
                        id: id,
                        sl: sl
                    });
                });
                var jsonData = JSON.stringify(valueAJ);
                var formData = new FormData();
                formData.append('ListIdLead',@Html.Raw(Json.Encode(ViewBag.ListDataId)));
                formData.append('ListNd', jsonData);
                $.ajax({
                    url: '/AssignedToU/ChangeAssData',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    success: function (rs) {
                        if (rs.Success) {
                            window.parent.postMessage('reloadActivitiesLeadPartialView', '*');
                            window.parent.ClosePopup();
                        } else {
                            toastr.warning('Thay đổi người chịu trách nhiệm thất  bại!', 'Thông báo');
                        }
                    },
                    error: function (xhr, status, error) {
                        // Xử lý lỗi
                        console.log('Thay đổi người chịu trách nhiệm thất  bại ' + error);
                    }
                });
            } else {
                toastr.warning('Tổng các giá trị không bằng Tổng số hoạt động!', 'Thông báo');
            }
            
        });
    });

</script>