@using Erp.BackOffice.Sale.Controllers
@using System.ComponentModel
@using Erp.BackOffice.Sale.Models
@model IEnumerable<LeadLogsModel>

    @{
        Layout = null;
    }

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer></script>

    <style>
        h2#swal2-title {
            font-size: 1.5rem;
        }

        #LeadLogsShow > div:first-child {
            margin-top: 20px !important;
        }

        .top_box_meeting::before, .top_box_meeting::after {
            content: "";
            height: 1px;
            background-color: #00000014;
            width: 40%;
            margin-top: 6px;
        }

        .meetingImage {
            margin-left: 2px;
            display: block;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            float: left;
            margin-top: 20px;
        }

        .title-and-username {
            margin: 0;
            margin-left: 23px;
            width: 70%;
            overflow: hidden;
        }

        .meeting-option-icons {
            display: none;
            height: 100%;
            vertical-align: top;
            cursor: pointer;
        }

            .meeting-option-icons:hover {
                cursor: pointer;
            }

        img.img-dotThree {
            width: 27px !important;
            float: right;
            padding: 7px;
            cursor: pointer;
            margin-top: -7px;
        }

        img.phone_call {
            width: 45px !important;
            height: 45px !important;
            float: right;
            padding: 7px;
            cursor: pointer;
            margin-top: -17px;
        }

        input#checkboxId {
            width: 15px;
            height: 13px;
            float: left;
            margin: 0 0 0 6px;
        }

        input[id^="meetingCheckbox_"] {
            width: 1.5rem;
            margin-top: -.2rem;
        }
    </style>

    @* Hiển thị tiêu đề chỉ một lần *@
    @if (Model != null && Model.Any())
    {
        <div class="top_box_meeting" style="text-align: center;">
            <span style="background-color: #e8a670; border-radius: 10px; outline-color: #e8a670; border: none; padding: 0px 30px; color: #fff ">Những việc đã lên kế hoạch</span>
        </div>


        foreach (var item in Model.Where(x => !x.IsDeleted).OrderByDescending(x => x.CreatedDate))
        {
            if (item.Action == "MEETING")
            {
                var checkboxId = "callCheckbox_" + item.Id;
                <div class="meeting-item-content" data-content="@item.StateJob">
                    <img class="meetingImage" src="~/assets/img/meeting.png" style="width: 40px !important; height: 40px !important; " />
                    <div style="display: block; margin:0 5px; height: fit-content; width:100%">

                        <div style="display: block; margin-left: 15px; border-left: 1px solid #00000014; width: 100%; height: fit-content; padding: 0; border-top: 1px solid #00000014; border-bottom: 1px solid #00000014; ">

                            <div class="wrapper" style="position: relative; overflow: hidden;">
                                <div style="display: inline-block; margin-left: 25px; margin-top: 0px; background-color: #fff; width: 90.5%; height: fit-content; padding: 10px; border-radius: 10px; word-wrap: break-word; background-color: #fffdea">

                                    <img src="~/assets/img/dotThree.png" class="img-dotThree" alt="Alternate Text" onclick="toggleMeetingOptions(this)" />

                                    <div class="flex-meeting" style="display: flex; align-items: center; gap: .4rem; margin-bottom: 3px;">
                                        <input type="checkbox" id="checkboxId" name="IsDeleted" onchange="updateLeadLog('@item.Id', this.checked,'@item.IdJob')" />
                                        <label for="meetingCheckbox_@item.Id" style="float: left; margin-top: 4px;"></label>
                                        <strong style="font-size: 13px;">Meeting</strong>
                                        <span style="margin-left: 10px; opacity: 0.5; width: 12rem">
                                            @item.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                                        </span>
                                        <p class="title-and-username"><strong>Chủ đề</strong>: @item.Content</p>
                                    </div>

                                    <p class="title-and-username" style="margin: 0 1rem 0 28px !important;"><strong>Với</strong>: @item.Username</p>
                                </div>
                                <div class="meeting-option-icons">
                                    <div class="editMeeting" onclick="editMeetingClicked('@ViewBag.LeadId', '@item.IdAction' ,'@item.Id' ,'@item.IdJob')">
                                        <i class="fa fa-edit fa-lg" style="display: block; font-size: 23px; color: #FFD700; margin-top: 3px;"></i>
                                    </div>
                                    <div class="deleteMeeting" onclick="deleteMeetingClicked('@item.Id','@item.IdJob')">
                                        <i class="fa fa-trash fa-lg" style="display: block; font-size: 23px; margin: 0 0 0 10px; color: #FF0000;"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (item.Action == "CALL")
            {
                var checkboxId = "meetingCheckbox_" + item.Id;
                <div class="meeting-item-content" data-content="@item.StateJob">
                    <img class="meetingImage" src="~/assets/img/call.png" style="width: 35px !important; height: 35px !important; " />
                    <div style=" display: block; margin:0 5px; height: fit-content; width:100%">
                        <div style="display: block; margin-left: 15px; border-left: 1px solid #00000014; width: 100%; height: fit-content; padding: 0; border-top: 1px solid #00000014; border-bottom: 1px solid #00000014; ">

                            <div class="wrapper" style="position: relative;">
                                <div style="display: inline-block; margin-left: 30px; margin-top: 0px; background-color: #fff; width: 90%; height: fit-content; padding: 10px; border-radius: 10px; word-wrap: break-word; background-color: #fffdea">
                                    <img src="~/assets/img/dotThree.png" class="img-dotThree" alt="Alternate Text" onclick="toggleMeetingOptions(this)" />
                                    <img src="~/assets/img/call_phone.png" class="phone_call" onclick="openModalPhoneCall()" />
                                    <div class="flex-meeting" style="display: flex; align-items: center; gap: .4rem; margin-bottom: 3px;">
                                        <input type="checkbox" id="checkboxId" name="IsDeleted" onchange="updateLeadLog('@item.Id', this.checked,'@item.IdJob')" />
                                        <label for="meetingCheckbox_@item.Id" style="float: left; margin-top: 4px;"></label>
                                        <strong style=" font-size: 13px; width: 10rem">Outbound call</strong>
                                        <span style="margin-left: 10px; opacity: 0.5; width: 12rem">
                                            @item.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                                        </span>
                                        <p class="title-and-username"><strong>Chủ đề</strong>: @item.Content</p>
                                    </div>

                                    <p class="title-and-username" style="margin: 0 1rem 0 28px !important;">To:<strong>
                                     @item.Username </strong> @item.Mobile</p>
                                </div>

                                <div class="meeting-option-icons">
                                    <div class="editMeeting" onclick="editCallClicked('@ViewBag.LeadId', '@item.IdAction','@item.Id' ,'@item.IdJob')">
                                        <i class="fa fa-edit fa-lg" style="display: block; font-size: 23px; color: #FFD700; padding: 5px; margin-top: 3px; "></i>
                                    </div>
                                    <div class="deleteMeeting" onclick="deleteMeetingClicked('@item.Id','@item.IdJob')">
                                        <i class="fa fa-trash fa-lg" style="display: block; font-size: 23px; color: #FF0000; padding: 5px;"></i>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }
            else if (item.Action == "TASK")
            {
                var checkboxId = "meetingCheckbox_" + item.Id;
                <div class="meeting-item-content" data-content="@item.StateJob">
                    <img class="meetingImage" src="~/assets/img/task.png" style="width: 35px !important; height: 35px !important;" />
                    <div style=" display: block; margin:0 5px; height: fit-content; width:100%">
                        <div style="display: block; margin-left: 15px; border-left: 1px solid #00000014; width: 100%; height: fit-content; padding:  0; border-top: 1px solid #00000014; border-bottom: 1px solid #00000014; ">

                            <div class="wrapper" style="position: relative;">
                                <div style="display: inline-block; margin-left: 30px; margin-top: 0px; background-color: #fff; width: 90%; height: fit-content; padding: 10px; border-radius: 10px; word-wrap: break-word; background-color: #fffdea; ">
                                    <img src="~/assets/img/dotThree.png" class="img-dotThree" alt="Alternate Text" onclick="toggleMeetingOptions(this)" />

                                    <div class="flex-meeting" style="display: flex; align-items: center; gap: .4rem; margin-bottom: 3px;">
                                        <input type="checkbox" id="checkboxId" name="IsDeleted" onchange="updateLeadLog('@item.Id', this.checked,'@item.IdJob')" />
                                        <label for="meetingCheckbox_@item.Id" style="float: left; margin-top: 4px;"></label>
                                        <strong style=" font-size: 13px;">Task</strong>
                                        <span style="margin-left: 10px; opacity: 0.5; width: 12rem">
                                            @item.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                                        </span>
                                        <p class="title-and-username" style="margin: 0 1rem 0 28px !important;"><strong>Chủ đề</strong>: @item.Content</p>
                                    </div>
                                    <p class="title-and-username" style="margin-bottom: 0px"><strong>Với</strong>: @item.Username</p>
                                </div>
                                <div class="meeting-option-icons">
                                    <div class="editMeeting" onclick="editTaskClicked('@ViewBag.LeadId', '@item.IdAction' ,'@item.Id','@item.IdJob')">
                                        <i class="fa fa-edit fa-lg" style="display: block; font-size: 23px; color: #FFD700; padding: 5px; margin-top: 3px; "></i>
                                    </div>
                                    <div class="deleteMeeting" onclick="deleteMeetingClicked('@item.Id','@item.IdJob')">
                                        <i class="fa fa-trash fa-lg" style="display: block; font-size: 23px; color: #FF0000; padding: 5px;"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            }

        }
    }

    <script>
        function toggleMeetingOptions(button) {
            var meetingOptions = $(button).closest('.meeting-item-content').find('.meeting-option-icons');
            if (meetingOptions.css('display') == 'none') {
                meetingOptions.css('display', 'flex');
                meetingOptions.css('align-items', 'center');
                meetingOptions.css('position', 'absolute');
                meetingOptions.css('bottom', ' 10px');
                meetingOptions.css('right', '70px');
                meetingOptions.css('height', '2rem');
            } else {
                meetingOptions.css('display', 'none');
            }
        }

        function editMeetingClicked(idLead, idAction, leadLogId, idJob) {
            $.ajax({
                url: '/LeadMeeting/Index',
                type: 'GET',
                data: {
                    leadId: idLead,
                    actionId: idAction,
                    leadLogId: leadLogId,
                    JobId: idJob,
                    isEdit: true
                },
                success: function (data) {
                    // Thay thế nội dung của modal-content bằng nội dung mới
                    $('#meetingContent').html(data);
                    $('#meetingModal').removeClass("fade");
                    $('#meetingModal').addClass("show");
                    $('.modal-dialog').css({
                        'position': 'static'
                    });

                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        function editCallClicked(idLead, idAction, leadLogId, idJob) {
            $.ajax({
                url: '/LeadMeeting/CallToView',
                type: 'GET',
                data: {
                    leadId: idLead,
                    actionId: idAction,
                    leadLogId: leadLogId,
                    idJob: idJob,
                    isEdit: true
                },
                success: function (data) {
                    // Thay thế nội dung của modal-content bằng nội dung mới
                    $('#meetingContent').html(data);
                    $('#meetingModal').removeClass("fade");
                    $('#meetingModal').addClass("show");
                    $('.modal-dialog').css({
                        'position': 'static'
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        function editTaskClicked(idLead, idAction, leadLogId, idJob) {
            $.ajax({
                url: '/LeadMeeting/TaskView',
                type: 'GET',
                data: {
                    leadId: idLead,
                    actionId: idAction,
                    leadLogId: leadLogId,
                    idJob: idJob,
                    isEdit: true
                },
                success: function (data) {
                    // Thay thế nội dung của modal-content bằng nội dung mới
                    $('#meetingContent').html(data);
                    $('#meetingModal').removeClass("fade");
                    $('#meetingModal').addClass("show");
                    $('.modal-dialog').css({
                        'position': 'static'
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        function deleteMeetingClicked(leadLogId, idJob) {
            Swal.fire({
                title: 'Bạn có chắc muốn xóa không?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Không'
            }).then((result) => {
                if (result.isConfirmed) {
                    debugger;
                    $.ajax({
                        url: '/LeadMeeting/DeleteJobHF',
                        type: 'GET',
                        data: { LeadLogId: leadLogId, JobId: idJob },
                        success: function (response) {
                            if (response.success) {
                                // Delete thành công
                                console.log("Delete thành công");
                            } else {
                                // Delete thất bại
                                console.log("Delete thất bại");
                            }
                        },
                        error: function (xhr, status, error) {
                            // Xử lý khi có lỗi
                            console.log("Lỗi khi gửi yêu cầu:", error);
                        }
                    });
                }
            })


        }
        function updateLeadLog(leadLogId, isChecked, idJob) {
            var deleted = isChecked ? 1 : 0;
            $.ajax({
                url: '/LeadMeeting/UpdateStatusLeadLog',
                type: 'GET',
                data: { isDeleted: deleted, LeadLogId: leadLogId, JobId: idJob },
                success: function (response) {
                    if (response.success) {
                        // Update thành công
                        console.log("Update thành công");
                    } else {
                        // Update thất bại
                        console.log("Update thất bại");
                    }
                },
                error: function (xhr, status, error) {
                    // Xử lý khi có lỗi
                    console.log("Lỗi khi gửi yêu cầu:", error);
                }
            });
        }
    </script>
