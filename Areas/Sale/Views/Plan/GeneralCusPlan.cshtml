@model IEnumerable<CheckPlanViewModel>
@using Erp.BackOffice.Areas.Cms.Models
@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Sale.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Tổng hợp kế hoạch";
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Plan",
        ActionName = "GeneralCusPlan",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false,
        AdvancedSearch = false,
        //SearchOjectAttr = ViewBag.ListOjectAttrSearch
    };
    int index = 1;
    int rowNumber = 0;
    int numberOfItem = 50;
    List<int> tlbh = (List<int>)ViewBag.TLBH;
    List<int> tlds = (List<int>)ViewBag.TLDS;
    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    string Month = Request["month"] != null ? Request["month"] : DateTime.Now.Month.ToString();
    string Year = Request["year"] != null ? Request["year"] : DateTime.Now.Year.ToString();
    IEnumerable<Erp.BackOffice.Areas.Administration.Models.UserViewModel> user = (IEnumerable<Erp.BackOffice.Areas.Administration.Models.UserViewModel>)ViewBag.user;
    DateTime aDateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    // Cộng thêm 1 tháng và trừ đi một ngày.
    DateTime retDateTime = aDateTime.AddMonths(1).AddDays(-1);
    IEnumerable<CategoryViewModel> origin = (IEnumerable<CategoryViewModel>)ViewBag.category;
    // List<KH_TUONGTACViewModel> Customer = (List<KH_TUONGTACViewModel>)ViewBag.Customer;
    string Brand = Request["Brand"];
    string TLBH = Request["tlbh"];
    string TLDS = Request["tlds"];
    var branchId = Erp.BackOffice.Helpers.Common.CurrentUser.BranchId.Value.ToString();
}

@helper GridColumnschedule(int id, string code)
{
    <a href="@Url.Action("Detail", "Customer", new {Area = "Account", Id = id })">@code</a>
}
@helper GridTuongtac(int? id, string NgayLap, int? nvkd)
{

    @*<a target="_blank" href='@Url.Action("LichSuTuongTac", "Plan", new { NGUOILAP_ID=nvkd,KHACHHANG_ID=id})'>@NgayLap</a>*@
    <a onclick="OpenPopup('@Url.Action("LichSuTuongTac", "Plan", new {NGUOILAP_ID=nvkd,KHACHHANG_ID= id , IsPopup = true })', '', 0, 0)">@NgayLap</a>

}

@using (Html.BeginPageHeaderContainer(pageSetting))
{
    @Html.TextBox("txtCusInfo", Request["txtCusInfo"], new { @class = "", autocomplete = "off", placeholder = "Mã hoặc Tên khách hàng..." })
    <select class="chzn-select" style="width:250px; float:left" name="SalerId">
        <option value="">- Nhân viên QL -</option>
        @foreach (var item in SelectListHelper.GetSelectList_FullUserNameKD(null, null))
                {
            <option @(Request["SalerId"] == item.Value ? "Selected" : "") value="@item.Value">@item.Text</option>
        }
    </select>
    <select class="chzn-select" style="width:250px; float:left" name="UserApprove">
        <option value="">-Người duyệt KHBH-</option>
        @foreach (var item in SelectListHelper.GetSelectList_FullUserName(null, null))
                {
            <option @(Request["UserApprove"] == item.Value ? "Selected" : "") value="@item.Value">@item.Text</option>
        }
    </select>
    <label>Tháng</label>
    <select id="Month" name="Month">
        @for (int i = 1; i <= 12; i++)
        {
            <option @(Month == i.ToString() ? "Selected" : "") value="@i">@i</option>
        }
    </select>
    <label>Năm</label>
        <select id="Year" name="Year">
            @for (int i = 2016; i <= (DateTime.Now.Year + 1) + 1; i++)
            {
                <option @(Year == i.ToString() ? "Selected" : "") value="@i">@i</option>
            }
        </select>
        <select style="text-align-last:center; width:125px" class="item_countForBrand" id="Brand" name="Brand">
            <option value=""> Chọn nhãn hàng</option>
            @foreach (var item in origin)
            {
                <option @(Brand == item.Value ? "Selected" : "") value="@item.Value"> @item.Name </option>
            }
        </select>
    <select style="text-align-last:center; width:80px; margin-right: 0px" class="item_countForBrand" id="tlbh" name="tlbh">
        <option value=""> TLBH</option>
        @foreach (var item in tlbh)
        {
            <option @( TLBH== item.ToString() ? "Selected" : "") value="@item.ToString()"> @item.ToString() </option>
        }
    </select>
    <select style="text-align-last:center; width:80px" class="item_countForBrand" id="tlds" name="tlds">
        <option value=""> TLDS</option>
        @foreach (var item in tlds)
        {
            <option @(TLDS == item.ToString() ? "Selected" : "") value="@item.ToString()"> @item.ToString() </option>
        }
    </select>
        @*@Html.DropDownList("HINHTHUC_TUONGTAC", Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_Category("HINHTHUC_GIOITHIEU", Request["HINHTHUC_TUONGTAC"], "-Hình thức-"), new { style = "width: 150px;/* padding-right: 0px; */margin-right: 100px;margin-left:1px;" })*@

}

<div class="table-responsive">
    @Html.Grid(Model).Columns(columns =>
{
    
    columns.Add(u => u.ManagerStaffName).Titled("NVQL").Sortable(true);
    columns.Add().Titled("STT").SetWidth(25).RenderValueAs(o =>
    {
        rowNumber++;

        return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
    });
    //columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(40).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
    columns.Add().Titled("Mã KH").SetWidth(100).Sanitized(false).Encoded(false).Sortable(true).RenderValueAs(u => GridColumnschedule(u.Id, u.Code));
    columns.Add(u => u.Name).Titled("Tên KH").Sortable(false); //.Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Code, u.Name, u.Id, u.CategoryCode, u.Unit, u.Size));
    columns.Add(u => u.Phone).Titled("Điện thoại").Sortable(false); //.Sanitized(false).Encoded(false).SetWidth(100).RenderValueAs(u => u.PriceOutbound.ToCurrencyStr(null)).Css("text-right");
                                                                    //columns.Add(u => u.NGAYLAP).Titled("Ngày").Sortable(false);
                                                                    ///columns.Add(u => u.GIO_TUONGTAC).Titled("Giờ").Sortable(false);
    columns.Add(u => u.CountForBrand).Titled("Nhãn hàng").Sortable(false);
    columns.Add(u => u.TARGET_BRAND).Titled("TARGET KHBH").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.TARGET_BRAND, null)); ;
    columns.Add(u => u.TotalBH).Titled("KHBH").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.TotalBH, null));
    columns.Add(u => u.ThucTeBH).Titled("Thực tế KHBH").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.ThucTeBH, null));
    columns.Add(u => u.BHTL).Titled("Tỷ lệ BH").Sortable(true);
    columns.Add(u => u.UserApproveName).Titled("Người duyệt KHBH");
    columns.Add(u => u.CreatedDate).Titled("Ngày tạo KHBH");
    columns.Add(u => u.ModifiedDate).Titled("Ngày cập nhật KHBH");
    columns.Add(u => u.TARGETDS).Titled("TARGET KHCDS").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.TARGETDS, null)); ;
    columns.Add(u => u.TotalDS).Titled("KHCDS").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.TotalDS, null));
    columns.Add(u => u.ThucTeDS).Titled("Thực tế KHCDS").Sortable(true).RenderValueAs(x => CommonSatic.ToCurrencyStr(x.ThucTeDS, null));
    columns.Add(u => u.DSTL).Titled("Tỷ lệ DS").Sortable(true);
    columns.Add(u => u.KHTT).Titled("Kế hoạch TT").Sortable(true).Sanitized(false).Encoded(false).RenderValueAs(u => GridTuongtac(u.Id, u.KHTT, u.ManagerStaffId));


}).WithPaging(50)

</div>
    @using (Html.BeginButtonContainer(pageSetting))
{
    <button class="btn btn-white btn-success btn-sm" type="button" value="Export" onclick="GetPrint(true)">
        <i class="ace-icon fa fa-file-excel-o"></i>
        Xuất excel
    </button>
    <a>Tổng KHBH:</a> <input type="text" readonly align="right" size="10" id="tongtien" style="color:red" value="@Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(ViewBag.TONGKHBH)" name="tongbh" />
    <a>Tổng thực KHBH:</a> <input type="text" readonly align="right" size="10" id="tongtien" style="color:red" value="@Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(ViewBag.TONGTHUCKHBH)" name="tongthucbh" />
    <a>Tổng KHCDS:</a> <input type="text" readonly align="right" size="10" id="tongthu" style="color:lightseagreen" value="@Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(ViewBag.TONGKHDS)" name="tongds" />
    <a>Tổng thực KHCDS:</a> <input type="text" readonly align="right" size="10" id="tongthu" style="color:lightseagreen" value="@Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(ViewBag.TONGTHUCKHDS)" name="tongthucds" />
}
<script src="~/Scripts/jquery.table.marge.js"></script>

<script>
    $('.table').margetable({
        type: 1,
        colindex: [{
            index: 5,
            dependent: [0,4]
        }]
    });

    $('.table').margetable({
        type: 1,
        colindex: [{
            index: 8,
            dependent: [0, 4]
        }]
    });

    $('.table').margetable({
            type: 2,
    colindex: [0] // column 1, 2
    });
</script>

@section Scripts {
   
    @*@Html.ScriptBottom_ChosenStyle()*@
    
     <script type="text/javascript">
       function GetPrint(type) {
            var Month = $('#Month').val();
            var Year = $('#Year').val();
            var branchId = $('#branchId').val();
            var txtCusInfo = $('#txtCusInfo').val();
            var SalerId = $('#SalerId').val();
            var Brand = $('#Brand').val();
            var HINHTHUC_TUONGTAC = $('#HINHTHUC_TUONGTAC').val();
            OpenPopup('/Plan/PrintGeneralCusPlan?Month=' + Month + '&Year=' + Year +'&branchId=' + branchId+ '&txtCusInfo=' + txtCusInfo + '&SalerId=' + SalerId + '&Brand=' + Brand + '&HINHTHUC_TUONGTAC=' + HINHTHUC_TUONGTAC + '&ExportExcel=' + type + '&IsPopup=true', '', 0, 900);

            setTimeout(function () {
                $("#myModal .modal-body .iframe-container").html("");
                $('#myModal').modal('hide');
            }, 20000);
            HideLoading();
        };
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
}