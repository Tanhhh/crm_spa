@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models
@using Erp.Domain.Sale.Entities
@using GridMvc.Html

@model DM_NHOMSANPHAMViewModel

@{
    ViewBag.Title = "Danh mục nhóm sản phẩm";
    bool isPopup = Request["IsPopup"] != null && Request["IsPopup"].ToString().ToLower() == "true" ? true : false;
    if (isPopup)
    {
        Layout = "~/Views/Shared/_PopupLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    }
    var jsCallback = Request["jsCallback"] == null ? "" : Request["jsCallback"].ToString();
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Product",
        ActionName = "DM_NhomSanPham",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = false
    };
    List<DM_NHOMSANPHAMViewModel> dm_nhomsanpham = (List<DM_NHOMSANPHAMViewModel>)ViewBag.DM_NHOMSANPHAM;
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>

<style type="text/css">
    .input-edit-inline {
        height: 23px;
        line-height: 23px;
        font-size: 10px;
    }

    .subItem2 {
        border: 1px solid #ddd;
        margin-left: -8px;
        margin-right: -8px;
        padding: 8px;
        border-width: 1px 0px 0px 0px;
        height: 39px;
    }

    .subItem {
        height: 22px;
    }

    .createupdateheader {
        font-size: large;
        font-weight: bold;
    }

    .widthimputslug {
        width: 70%;
        margin: 1px;
    }

    #right-titleslug {
        text-align: center;
    }

    @@media only screen and (max-width : 767px) {
        p {
            padding-left: 0px !important;
        } 

        label {
            font-weight: bold;
            width: 90%;
        }

        select#LOAISANPHAM_IDCHA {
            width: 40%;
            margin-left: 2px;
        }

        input#TEN_NHOMSANPHAM, select, input#STT {
            width: 100%;
            margin-top: 8px;
        }

        div#home > p > span {
            margin-left: 40%;
        }

        div#home > p > span, label#nutHien {
            margin-top: 10px;
        }

        #checkBox {
            width : 0;
            margin-left : 5px;
        }

        label#nutHien {
            width: 25%;
        }

        .widthimputslug {
            width: 67.5%;
            margin: 1px;
        }

        #right-titleslug {
            text-align: left;
            font-weight: 400;
            font-size: 13px;
            left: -15;
            margin-top: 8px;
        }

        .control-value.col-lg-10.col-md-10.col-sm-10 {
            width: 150%;
            padding-left: 0px;
        }

        div#div1 {
            float: none !important;
            margin-top: -20px;
            margin-left: 28%;
            padding-left: 0 !important;
        }

        div#div2 {
            float: none !important;
            margin-top: -26px;
            margin-left: 55%;
            margin-bottom: 5px;
        }

        .table.table-striped.table-bordered.table-hover {
            font-size: 13px;
        }

        td > i > b, div.subItem > i > b {
            font-size: 11px;
            vertical-align: middle;
        }

        .bigger-120 {
            font-size: 100% !important;
        }

        .table.table-striped.table-bordered.table-hover > tbody > tr > td {
            vertical-align: middle;
        }

        .table.table-striped.table-bordered.table-hover > tbody > tr {
            height: fit-content;
        }

        .ace-thumbnails {
            text-align: center;
            margin-top: 5px;
        }

        label {
            font-weight: bold;
            width: 90%;
            margin-top: 5px;
            margin-left: 5px;
        }

        div.subItem > a#edit {
            margin-top: 0px;
        }

        .btn.btn-minier.btn-danger {
            margin-top: 10px !important;
        }

        div.subItem .btn.btn-minier.btn-danger {
            margin-top: -3px !important;
        }

        span.glyphicon.glyphicon-picture {
            font-size: 9px;
            margin-top: -5px;
        }
    }

    @@media only screen and (max-device-width: 414px) {
        a.navbar-brand.logo-big {
            width: 30% !important;
            font-size: 20px;
            margin-left: -25px;
        }

        .navbar-buttons.navbar-header.pull-right {
            width: 60%;
            position: absolute;
            right: 0;
            top: 7px;
        }

        .widget-toolbar>.nav-tabs {
            margin-top: 12px!important;
        }

        .widget-header.widget-header-small {
            height: 5% !important;
        }

        div#home > p > span {
            margin-left: 45%;
        }

        div#image {
            margin-top: -15px;
        }

        div#display-image {
            margin-bottom: 13px;
        }

        #display-image img {
            width: 100% !important;
        }

        div#div1 {
            float: none !important;
            margin-top: -20px;
            margin-left: 30%;
            padding-left: 0 !important;
        }

        div#div2 {
            float: none !important;
            margin-top: -26px;
            margin-left: 53%;
            margin-bottom: 5px;
        }
    }

    @@media only screen and (max-device-width: 375px) {
        a.navbar-brand.logo-big {
            width: 30% !important;
            font-size: 20px;
            margin-left: -20px;
        }

        .navbar-buttons.navbar-header.pull-right {
            width: 60%;
            position: absolute;
            right: 0;
            top: 7px;
        }

        .widget-toolbar>.nav-tabs {
            margin-top: 12px!important;
        }

        .widget-header.widget-header-small {
            height: 35px !important;
        }

        div#home > p > span {
            margin-left: 42%;
        }

        div#image {
            margin-top: -15px;
        }

        div#display-image {
            margin-bottom: 13px;
        }

        div#display-image > img { 
            width: 100%;
        }

        div#div1 {
            float: none !important;
            margin-top: -20px;
            margin-left: 27%;
            padding-left: 0 !important;
        }
    }

    @@media only screen and (max-device-width: 360px) {
         a.navbar-brand.logo-big {
            width: 30% !important;
            font-size: 20px;
            margin-left: -15px;
        }

        .navbar-buttons.navbar-header.pull-right {
            width: 60%;
            position: absolute;
            right: 0;
            top: 7px;
        }

        .widget-toolbar>.nav-tabs {
            margin-top: 12px!important;
        }

        .widget-header.widget-header-small {
            height: 35px !important;
        }

        div#home > p > span {
            margin-left: 40%;
        }

        div#image {
            margin-top: -15px;
        }

        div#display-image {
            margin-bottom: 13px;
        }

        div#display-image > img { 
            width: 100%;
        }
    }
</style>
@using (Html.BeginPageHeaderContainer(pageSetting))
{
    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
    <input type="hidden" value="@Request["jsCallback"]" name="jsCallback" />
}

@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-error">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="icon-warning-sign red"></i>
        @ViewBag.FailedMessage
    </div>
}

@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.AlertMessage
    </div>
}

@helper GridColumnCommand(int id)
{
                    /**/
    <div class="hidden-phone visible-desktop action-buttons">
        @using (Html.BeginForm("DeleteNhomSanPham", "Product", FormMethod.Post))
        {
            if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("DeleteNhomSanPham", "Product", "Sale"))
            {
                <input type="hidden" value="@id" name="Id" />
                <button type="submit" class="btn btn-minier btn-danger" onclick="return confirm('Bạn có muốn xóa dữ liệu không ?');" style="margin-top:-3px">
                    <i class="ace-icon fa fa-trash"></i>
                    Xóa
                </button>
            }
        }
    </div>
}

@helper RenderEditItem(int id, string ten, int? nhomcha, int stt, string banner, int? is_show, string metatitle, string metadescription, string urlslug, string video, bool? isproduct)
{
                    /**/

                    var ncha = nhomcha.ToString();
                    var bannersrc = Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(banner, "productgroups-image-folder", "productgroups");
                    //if (!string.IsNullOrEmpty(banner)) {
                    //    bannersrc = "~" + bannersrc;
                    //}

                    <a id="edit" class="btn btn-info btn-minier" onclick="return edit(@id,'@ten','@ncha',@stt,'@bannersrc','@banner',@is_show,'@metatitle','@metadescription','@urlslug','@video', '@isproduct.ToString()')" style="margin-top:-3px">
                        <i class="ace-icon fa fa-edit"></i>
                        Sửa
                    </a>
}

@helper isshow(int id, int? is_show)
{
                    /**/
    <label>
        <input id="is_show_table" class="ace class-is-show text-center" type="checkbox" name="is-show-table" value="@is_show" checked="@(is_show == 1? "checked":null)">
        <span class="lbl"></span>
    </label>
}

@helper ShowImage(int id, string banner)
{
                    /**/

                    var bannersrc = Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(banner, "productgroups-image-folder", "productgroups");
                    //if (!string.IsNullOrEmpty(banner))
                    //{
                    //    bannersrc = "~" + bannersrc;
                    //}
                    <div class="text-center ace-thumbnails">
                        <a id="showimage_@id" name="showimage" href="@bannersrc" data-rel="colorbox" class="cboxElement">
                            <span class="glyphicon glyphicon-picture"></span>Xem
                        </a>
                    </div>

}
<hr>
@using (Html.BeginForm("CreateNhomSanPham", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.BANNER)
    @Html.HiddenFor(model => model.NHOMSANPHAM_ID)
    <p id="createupdateheader" class="createupdateheader text-center"><span>Tạo nhóm hàng</span></p>

    <div class="row">
        <div class="col-sm-12">
            <div class="widget-container-col ui-sortable" id="widget-container-col-10" style="min-height: 108px;">
                <div class="widget-box ui-sortable-handle" id="widget-box-10" style="opacity: 1;">
                    <div class="widget-header widget-header-small">
                        <div class="widget-toolbar no-border pull-left">
                            <ul class="nav nav-tabs" id="myTab">
                                <li class="active">
                                    <a data-toggle="tab" href="#home" aria-expanded="true"><i class="fa fa-info-circle"></i> Tổng quan</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" href="#image" aria-expanded="false"><i class="fa fa-image"></i> Ảnh minh họa</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" id="tabdescription" href="#description" aria-expanded="false"><i class="fa fa-comment-o"></i>Mô tả</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="widget-body" style="overflow: hidden;">
                        <div class="widget-body">
                            <div class="widget-main padding-6">
                                <div class="tab-content">
                                    <div id="home" class="tab-pane active">
                                        <p style="padding-left:80px">
                                            <label>
                                                <i class="ace-icon fa fa-star orange"></i>
                                                Nhóm Sản phẩm/DV
                                            </label>
                                            @Html.TextBoxFor(model => model.TEN_NHOMSANPHAM, new { @class = "", autocomplete = "off", placeholder = "Tên nhóm hàng" })
                                            @Html.DropDownListFor(model => model.NHOM_CHA, Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_NhomSP(null, "Thuộc nhóm"), new { @class = "" })
                                            @Html.TextBoxFor(model => model.STT, new { @class = "", autocomplete = "off", @placeholder = "STT", @Value = (@Model.STT == 0) ? "" : @Model.STT.ToString() })
                                            @Html.TextBoxFor(model => model.Video, new { @class = "", autocomplete = "off", @placeholder = "Video (nếu có)" })


                                            <span>Hiện</span>
                                            <label id="nutHien">
                                                <input id="is_show" class="ace class-is-show" type="checkbox" name="is-show-checkbox" value="1" checked="checked">
                                                <span class="lbl"></span>
                                            </label>

                                            @Html.CustomSwitchesFor(model => model.IsProduct, SwitchesStyle.CheckboxStyle, true)   
                                        </p>
                                        <div id="" class="control-group form-group">
                                            <div><label>Thông tin SEO</label></div>
                                            <label id="right-titleslug" class=" control-label col-lg-2 col-md-2 col-sm-2">Tiêu đề</label>
                                            <div class=" control-value col-lg-10 col-md-10 col-sm-10">
                                                <input class="widthimputslug" id="META_TITLE" name="META_TITLE" type="text" value="@Model.META_TITLE">
                                            </div>
                                            <label id="right-titleslug" class="control-label col-lg-2 col-md-2 col-sm-2">Mô tả ngắn</label>
                                            <div class="control-value col-lg-10 col-md-10 col-sm-10">

                                                <input class="widthimputslug" id="META_DESCRIPTION" name="META_DESCRIPTION" type="text" value="@Model.META_DESCRIPTION">

                                            </div>
                                            <label id="right-titleslug" class="control-label col-lg-2 col-md-2 col-sm-2">Url slug</label>
                                            <div class="control-value col-lg-10 col-md-10 col-sm-10">

                                                <input class="widthimputslug" id="URL_SLUG" name="URL_SLUG" type="text" value="@Model.URL_SLUG" required>

                                            </div>
                                        </div>
                                    </div>
                                    <div id="image" class="tab-pane">
                                        <div class="wrap-btn-upload">
                                            <a class="btn btn-primary btn-sm btn-white"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                                            <input type="file" id="file-image" name="file-image" class="file-image" onchange="previewFileImage(event, '#display-image img')" />
                                        </div>
                                        <div class="text-center" id="display-image">
                                            <img src="/assets/css/images/noimage.gif" title="@Model.TEN_NHOMSANPHAM" id="" style="max-height:250px" />
                                        </div>
                                    </div>

                                    <div id="description" class="tab-pane">
                                        <textarea class="ckeditor" cols="20" id="Decription" name="Decription" placeholder="Mô tả ngắn" rows="2">@Model.Decription</textarea>

                                    </div>
                                </div>

                                <div style="float:left;padding-left:50%;" id="div1">
                                    <a class="btn btn-mini btn-black" onclick="return reset()">
                                        Nhập lại
                                        <i class="ace-icon fa fa-refresh icon-on-right"></i>
                                    </a>
                                </div>

                                <div style="float:right;" id="div2">
                                    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("CreateNhomSanPham", "Product", "Sale"))
                                    {
                                        <button id="save" name="Save" value="Save" type="submit" class="btn btn-mini btn-primary" href="@Url.Action("CreateNhomSanPham", pageSetting.ModuleName)">
                                            <i class="ace-icon fa fa-plus"></i>
                                            @Wording.Save
                                        </button>
                                    }
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<hr>

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th width="250">Nhóm hàng</th>
            <th style="width:10px">Ảnh minh họa</th>
            <th style="width:10px">Hiện</th>
            <th style="width:10px">Thứ tự</th>
            <th style="width:10px">Chỉnh sửa</th>
            <th style="width:10px">Xóa</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in dm_nhomsanpham.Where(i => (i.NHOM_CHA == null || i.NHOM_CHA == 0)))
        {
            var subList = dm_nhomsanpham.Where(i => i.NHOM_CHA == item.NHOMSANPHAM_ID).ToList();

            <tr>
                <td>
                    <i style="cursor:pointer" class="fa @(subList.Count > 0 ? "btn-group fa-plus-square-o" : "") bigger-120" data-id="@item.NHOMSANPHAM_ID">
                        <b id="label_name_@item.NHOMSANPHAM_ID" style="font-family:'Open Sans'">@item.TEN_NHOMSANPHAM</b>
                    </i>
                </td>
                <td>@ShowImage(item.NHOMSANPHAM_ID, item.BANNER)</td>
                <td>@isshow(item.NHOMSANPHAM_ID, item.IS_SHOW)</td>
                <td>@item.STT</td>
                <td>@RenderEditItem(item.NHOMSANPHAM_ID, item.TEN_NHOMSANPHAM, item.NHOM_CHA, item.STT, item.BANNER, item.IS_SHOW, item.META_TITLE, item.META_DESCRIPTION, item.URL_SLUG, item.Video, item.IsProduct)</td>
                <td>@GridColumnCommand(item.NHOMSANPHAM_ID)</td>
            </tr>
            foreach (var subItem in subList)
            {
                var subList2 = dm_nhomsanpham.Where(i => i.NHOM_CHA == subItem.NHOMSANPHAM_ID).ToList();

                <tr class="item_of_@subItem.NHOM_CHA" style="display: none;">
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="padding-left:17px; @(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            <i style="cursor:pointer" class="fa @(subList2.Count > 0 ? "btn-group fa-plus-square-o" : "") bigger" data-id="@subItem.NHOMSANPHAM_ID">
                                <b id="label_name_@subItem.NHOMSANPHAM_ID" style="font-family:'Open Sans'"> @subItem.TEN_NHOMSANPHAM</b>
                            </i>
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="padding-left: 40px; display: none">
                                @subItem2.TEN_NHOMSANPHAM
                            </div>
                        }
                    </td>
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            @ShowImage(subItem.NHOMSANPHAM_ID, subItem.BANNER)
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="display:none">
                                @ShowImage(subItem2.NHOMSANPHAM_ID, subItem2.BANNER)
                            </div>
                        }
                    </td>
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            @isshow(subItem.NHOMSANPHAM_ID, subItem.IS_SHOW)
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="display:none">
                                @isshow(subItem2.NHOMSANPHAM_ID, subItem2.IS_SHOW)
                            </div>
                        }
                    </td>
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            @subItem.STT
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="display:none">
                                @subItem2.STT
                            </div>
                        }
                    </td>
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            @RenderEditItem(subItem.NHOMSANPHAM_ID, subItem.TEN_NHOMSANPHAM, subItem.NHOM_CHA, subItem.STT, subItem.BANNER, subItem.IS_SHOW, subItem.META_TITLE, subItem.META_DESCRIPTION, subItem.URL_SLUG, subItem.Video, subItem.IsProduct)
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="display:none">
                                @RenderEditItem(subItem2.NHOMSANPHAM_ID, subItem2.TEN_NHOMSANPHAM, subItem2.NHOM_CHA, subItem2.STT, subItem2.BANNER, subItem2.IS_SHOW, subItem2.META_TITLE, subItem2.META_DESCRIPTION, subItem2.URL_SLUG, subItem2.Video, subItem2.IsProduct)
                            </div>
                        }
                    </td>
                    <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                        <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                            @GridColumnCommand(subItem.NHOMSANPHAM_ID)
                        </div>

                        @foreach (var subItem2 in subList2)
                        {
                            <div class="subItem2 item_of_@subItem2.NHOM_CHA" style="display:none">
                                @GridColumnCommand(subItem2.NHOMSANPHAM_ID)
                            </div>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>



@section Scripts {
<link href="/Scripts/ckeditor/contents.css" rel="stylesheet" />
<script src="/Scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        $(function () {
            $(".btn-group").click(function () {
                var id = $(this).data("id");
                var on = $(this).hasClass("on");
                if (on) {
                    $(".item_of_" + id).hide();
                    $(this).removeClass("on");
                    $(this).removeClass("fa-minus-square-o");
                    $(this).addClass("fa-plus-square-o");
                }
                else {
                    $(".item_of_" + id).show();
                    $(this).addClass("on");
                    $(this).removeClass("fa-plus-square-o");
                    $(this).addClass("fa-minus-square-o");
                }
            });
        });

        function edit(id, ten, nhomcha, stt, bannersrc, banner, is_show, metatitle, metadescription, urlslug, video, isproduct) {
            //debugger
            $("#NHOMSANPHAM_ID").val(id);
            $("#TEN_NHOMSANPHAM").val(ten);
            $("#NHOM_CHA").val(nhomcha);
            $("#STT").val(stt);
            $("#BANNER").val(banner);
            $("#display-image img").attr("src", bannersrc);
            $("#createupdateheader").text("Sửa nhóm hàng-" + ten);
            $("#META_TITLE").val(metatitle);
            $("#META_DESCRIPTION").val(metadescription);
            $("#URL_SLUG").val(urlslug);
            $("#Video").val(video);
            //$("#Decription").text(description);
            //initCkeditor();
            if (is_show == 1) {
                $("#is_show").prop('checked', true);
            }
            else {
                $("#is_show").prop('checked', false);
            }
            if (isproduct == "True") {
                $("#IsProduct").prop('checked', true);
            }
            else {
                $("#IsProduct").prop('checked', false);
            }

            $.ajax({

                url: '/Product/getDecription/' + id,
                dataType: "json",

                type: "GET",
                contentType: 'application/json; charset=utf-8',
                async: false,
                success: function (data) {
                    //alert(data);
                    //debugger
                    CKEDITOR.instances.Decription.setData(data);

                },
                error: function (xhr) {
                    //alert('error' + xhr);
                }
            });
           // CKEDITOR.instances.Decription.insertHtml(description);

           // var oEditor = CKEDITOR.instances.ckfinder;
           
            //oEditor.insertHtml(description);
        }

       

            function reset() {
                $("#NHOMSANPHAM_ID").val(0);
                $("#TEN_NHOMSANPHAM").val("");
                $("#NHOM_CHA").val("");
                $("#display-image img").attr("src", "/assets/css/images/noimage.gif");
                $("#createupdateheader").text("Tạo nhóm hàng");
                $("#is_show").prop('checked', true);
                CKEDITOR.instances.Decription.setData("");
            }

            $("#TEN_NHOMSANPHAM").keyup(function () {
                var Text = $(this).val();
                Text = to_slug(Text);

                $("#URL_SLUG").val(Text);
            });



            function to_slug(str) {
                // Chuyển hết sang chữ thường
                str = str.toLowerCase();

                // xóa dấu
                str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');
                str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');
                str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');
                str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');
                str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');
                str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');
                str = str.replace(/(đ)/g, 'd');

                // Xóa ký tự đặc biệt
                str = str.replace(/([^0-9a-z-\s])/g, '');

                // Xóa khoảng trắng thay bằng ký tự -
                str = str.replace(/(\s+)/g, '-');

                // xóa phần dự - ở đầu
                str = str.replace(/^-+/g, '');

                // xóa phần dư - ở cuối
                str = str.replace(/-+$/g, '');

                // return
                return str;
            }

        
            function initCkeditor() {
                $('.ckeditor').ckeditor({
                    "extraPlugins": 'imagebrowser',
                    "imageBrowser_listUrl": "@Url.Action("ListJson","Images")",
                    // Define the toolbar groups as it is a more accessible solution.
                    toolbarGroups: [
                        { "name": "document", "groups": ["mode", "document", "doctools"] },
                        { "name": "editing", "groups": ["find", "selection", "spellchecker"] },
                        { "name": "forms" },
                        { "name": "tools" },
                        { "name": "basicstyles", "groups": ["basicstyles", "cleanup"] },
                        { "name": "clipboard", "groups": ["clipboar", "undo"] },
                        { "name": "links", "groups": ["links"] },
                        { "name": "paragraph", "groups": ["list", "blocks"] },
                        { "name": "insert", "groups": ["insert"] },
                        { "name": "styles", "groups": ["styles"] },
                        //{ "name": "about", "groups": ["about"] },
                        { "name": "styles" },
                        { "name": "colors" },
                        { "name": "align", "groups": ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] }

                    ],
                    // Remove the redundant buttons from toolbar groups defined above.
                    removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar'
                });
            }

    </script>
}
