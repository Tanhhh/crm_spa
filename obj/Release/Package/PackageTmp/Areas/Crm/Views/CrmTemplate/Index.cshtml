@model List<CrmTemplateViewModel>

    @using Erp.BackOffice.App_GlobalResources
    @using Erp.BackOffice.Sale.Models
    @using Erp.BackOffice.Helpers
    @using GridMvc.Html

    @{
        ViewBag.Title = Wording.PageIndex_TemplatePrint;
        bool isPopup = Request["IsPopup"] != null && Request["IsPopup"].ToString().ToLower() == "true" ? true : false;
        if (isPopup)
        {
            Layout = "~/Views/Shared/_PopupLayout.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
        }

        Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
        {
            ModuleName = "CrmTemplate",
            ActionName = "Index",
            PageTitle = ViewBag.Title,
            DisplaySearchPanel = false,
            IsPopup = false,
            DisplayBackButton = false
        };
    }

    <link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>
    @section HeadOfPage {
        @Html.ScriptTop_ChosenStyle()
    }

    @helper GridColumnCommand(int id, string Code)
    {
        <!--if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "CrmTemplate", "Crm"))
        {-->
        <!--<button name="Delete" value="@id" class="btn btn-minier btn-danger" id="btnDeleteSingle-@id">
                <i class="ace-icon fa fa-trash"></i>
            </button>
        }-->
        <p>
            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Edit", "CrmTemplate", "Crm"))
            {
                @*<button value="@id" class="btn btn-mini btn-success" id="btnEdit-@id">
                        <i class="ace-icon fa fa-edit"></i>
                    </button>*@
                <a class="btn btn-minier btn-success" href="@Url.Action("Edit", "CrmTemplate", new {Id = id})">
                    <i class="ace-icon fa fa-edit"></i>
                </a>
            }
            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "CrmTemplate", "Crm"))
            {
                <button value="@id" class="btn btn-minier btn-danger" id="btnDeleteSingle-@id">
                    <i class="ace-icon fa fa-trash"></i>
                </button>
            }

        </p>
    }


    @helper GridColumnName(string contentRule, string emailTitle, int typeTemplate, int id)
    {
        if (typeTemplate == 1 || typeTemplate == 2)
        {
            string pattern = @"^(.*?[.!?]|.*?$)";

            // Create a Regex object
            var regex = new System.Text.RegularExpressions.Regex(pattern, System.Text.RegularExpressions.RegexOptions.Multiline);
            var match = regex.Match(contentRule);
            string content = "";
            if (match.Value == string.Empty)
            {
                content = contentRule;
            }

            else
            {
                content = match.Value;
            }


            <a href="@Url.Action("Detail", "CrmTemplate" , new { Id = id })">@content</a>
        }
        if (typeTemplate == 3)
        {
            <a href="@Url.Action("Detail", "CrmTemplate" , new { Id = id })">@emailTitle</a>
        }
    }


    @helper GridColumnTypeTemplate(int typeTemplate)
    {
        var value = "";
        switch (typeTemplate)
        {
            case 1:
                value = "SMS";
                break;
            case 2:
                value = "Zalo";
                break;
            case 3:
                value = "Email";
                break;
        }
        <span>@value</span>
    }
    @helper GridColumnTypeLead(bool typeLead)
    {
        var value = "";
        if (!typeLead)
        {
            value = "Contact";
        }
        else
        {
            value = "Lead";
        }
        <span>@value</span>
    }

    

    @helper CheckDeleteColumns(int Id, string Code)
    {
        <label>
            <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
            <span class="lbl"></span>
        </label>
    }

    @helper BuildCheckAll()
    {
        <label>
            <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
            <span class="lbl" title=""></span>
        </label>
    }

    @using (Html.BeginPageHeaderContainer(pageSetting))
    {

    }

    @if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
    {
        <div class="alert alert-block alert-success">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-check green"></i>
            @ViewBag.SuccessMessage
        </div>
    }

    @if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
    {
        <div class="alert alert-block alert-danger">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-warning red"></i>
            @ViewBag.FailedMessage
        </div>
    }

    @if (!isPopup)
    {
        using (Html.BeginForm("Delete", pageSetting.ModuleName, FormMethod.Post))
        {
            @Html.Grid(Model).Columns(columns =>
            {
                columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id, ""));
                columns.Add().Titled(Wording.Title).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.ContentRule, u.TileEmail, u.TypeTemplate, u.Id));
                columns.Add().Titled("Loại tin nhắn").SetWidth(130).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnTypeTemplate(u.TypeTemplate));
                columns.Add().Titled("Lead/Contact").SetWidth(130).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnTypeLead(u.TypeLead));
                columns.Add(u => u.CreatedDate).Titled(Wording.CreatedDate).SetWidth(130).Format("{0:dd/MM/yyyy HH:mm}");
                columns.Add(u => u.ModifiedDate).Titled(Wording.ModifiedDate).SetWidth(130).Sortable(true).Format("{0:dd/MM/yyyy HH:mm}");
                columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id, "")).SetWidth(20);
            }).WithPaging(10)

            using (Html.BeginButtonContainer(pageSetting))
            {
                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "CrmTemplate", "Crm"))
                {
                    <a class="btn btn-info btn-mini" href="@Url.Action("Create", pageSetting.ModuleName)">
                        <i class="ace-icon fa fa-plus"></i>
                        @Wording.CreateNew
                    </a>
                }
                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "CrmTemplate", "Crm"))
                {
                    <button name="DeleteAll" value="DeleteAll" class="btn btn-mini btn-danger" id="btnDeleteMultiple">
                        <i class="ace-icon fa fa-trash bigger-120"></i>
                        @Wording.Delete
                    </button>
                }
            }
        }
    }
    else
    {
        @Html.Grid(Model).Columns(columns =>
   {
       //columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
       columns.Add().Titled(Html.DisplayNameFor(u => u.FirstOrDefault().ContentRule).ToString()).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.ContentRule, u.TileEmail, u.TypeTemplate, u.Id));
   }).WithPaging(10)
    }

    @section Scripts {
        <script>
            $(document).ready(function () {

                $('#btnDeleteMultiple').click(function (event) {
                    event.preventDefault();
                    if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                        alert("Phải chọn ít nhất 1 item.");
                        return false;
                    } else {
                        if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                            DeleteMultiple();
                        } else {
                            return false;
                        }
                    }


                });

                //single delete
                $(document).on('click', '[id^="btnDeleteSingle-"]', function (event) { //listen for button with id start with btnDeleteSingle-
                    event.preventDefault();
                    if (confirm('Bạn có chắc muốn xóa item ?')) {
                        var id = $(this).val(); // Get the value of the clicked button
                        // Perform actions based on the button's ID or value
                        DeleteSingle(id);
                    }
                    else {
                        return false;
                    }

                });




            });


                       function DeleteSingle(btnId) {

                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("Delete", "CrmTemplate")' + '?Delete=' + btnId,
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({}),
                                dataType: "json",
                                success: function (response) {
                                    console.log(response);
                                    window.location.href = response.redirectToUrl;
                                }
                            });

                     }
                       function DeleteMultiple() {
                                   var checkedValuesString = $('[name="DeleteId-checkbox"]:checked').map(function () { //chọn toàn bộ checked check box name="DeleteId-checkbox", lấy id, tạo thành array cách bởi dấu , pass sang controller
                                        return $(this).val();
                                    }).get().join(',');
                                    $.ajax({
                                     type: "POST",
                                     url: '@Url.Action("Delete", "CrmTemplate")' + '?DeleteId-checkbox=' + checkedValuesString,
                                     contentType: "application/json; charset=utf-8",
                                     data: JSON.stringify({

                                     }),
                                     dataType: "json",
                                     success: function (response) {
                                         console.log(response);
                                             window.location.href = response.redirectToUrl;
                                     }
                                    });
                       }


        </script>

    }
