@model Erp.BackOffice.Account.Models.CustomerViewModel

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Sale.Models
@using Erp.BackOffice.Helpers
@using Erp.Domain.Account.Entities
@using Erp.Domain.Sale.Entities
@using GridMvc.Html
@using Erp.BackOffice.Account.Models


@{
    if (ViewBag.IsNullLayOut == true)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    }
    ViewBag.Title = "Thông tin chi tiết khách hàng";

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Customer",
        ActionName = "DetailSearch",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = Request["IsDetailChart"] != null ? false : true,
    };

    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    int rowNumber = 0;
    int numberOfItem = 10;
    IEnumerable<ProductInvoiceViewModel> serviceInvoice = (IEnumerable<ProductInvoiceViewModel>)ViewBag.service;

    IEnumerable<LogVipViewModel> serviceLogVip = (IEnumerable<LogVipViewModel>)ViewBag.serviceLogVip;
    IEnumerable<LogVipViewModelCrm> ListLogVipViewModelCrm = (IEnumerable<LogVipViewModelCrm>)ViewBag.ListLogVipViewModelCrm;

    ///
    IEnumerable<SelectListItem> CustomerGroupList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("CustomerGroup", null, "value");
    IEnumerable<SelectListItem> CustomerTypeList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("CustomerType", null, "value");
    IEnumerable<SelectListItem> EconomicStatusList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("EconomicStatus", null, "value");
    IEnumerable<SelectListItem> SkinLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("skinLevel", null, "value");
    IEnumerable<SelectListItem> HairlLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("hairLevel", null, "value");
    IEnumerable<SelectListItem> GladLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("gladLevel", null, "value");
    IEnumerable<SelectListItem> NguonKhach = Erp.BackOffice.Helpers.Common.GetSelectList_Category("NguonKhach", null, "value");
    IEnumerable<CustomerViewModel> customerList = (IEnumerable<CustomerViewModel>)ViewBag.CustomerList;


}
@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
    <style type="text/css">
        .choisen-container .choisen-container-single .choisen-container-active .choisen-with-drop {
            width: 180px !important;
        }
    </style>
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css" integrity="sha512-3pIirOrwegjM6erE5gPSwkUzO+3cTjpnV9lexlNZqvupR64iZBnOOTiiLPb9M36zpMScbmUNIcHUqKD47M719g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>
@*leadindex css*@
<style>
    .loading {
        cursor: progress;
    }

    .modal-body input, .select2-container {
        margin-bottom: 10px !important;
    }

    .table-hover > tbody > tr:hover, .table > tbody > tr.active > td, .table > tbody > tr.active > th, .table > tbody > tr > td.active, .table > tbody > tr > th.active, .table > tfoot > tr.active > td, .table > tfoot > tr.active > th, .table > tfoot > tr > td.active, .table > tfoot > tr > th.active, .table > thead > tr.active > td, .table > thead > tr.active > th, .table > thead > tr > td.active, .table > thead > tr > th.active {
        background-color: #eaf4fd !important;
    }


    .btn-default2, #btnCloseAdd, #QuickEditLeadDisable, #btnLeadDelete {
        border: 2px solid #b7bbd2;
        background-color: #b7bbd2 !important;
        color: #fff !important;
        font-weight: bold;
        border-radius: 3px;
    }

        .btn-default2:hover, #btnCloseAdd:hover, #QuickEditLeadDisable:hover, #btnLeadDelete:hover {
            opacity: 0.8;
        }

    .btn-primary2, #saveLeadModal, #QuickEditLead, #QuickEditLeadEnable {
        border: 2px solid #3F51B5;
        background-color: #3f51b5 !important;
        color: #ffffff !important;
        font-weight: bold;
        border-radius: 3px;
        padding: 5px 20px !important;
    }

    #btnLeadOpenPpAssign {
        /*   border: 2px solid #48D1CC;
        background-color: #20B2AA !important;*/
        /*    color: #3f51b5 !important;
        font-weight: bold;*/
        border-radius: 3px;
        padding: 5px 12px !important;
    }

    #btnLeadexitoption {
        border: 2px solid #FF6347;
        background-color: #FF0000 !important;
        color: #ffffff !important;
        font-weight: bold;
        border-radius: 3px;
        padding: 5px 20px !important;
    }

        .btn-primary2:hover, #saveLeadModal:hover, #QuickEditLead:hover, #QuickEditLeadEnable:hover, #btnLeadOpenPpAssign:hover, #btnLeadexitoption:hover {
            opacity: 0.8;
        }

    #SubLeadLogsShow {
        margin-top: 10px !important;
    }

    .modal-body section {
        border: unset !important;
    }

    section h4 {
        margin-bottom: -10px !important;
        font-weight: bold;
    }

    #addNewContent {
        padding-left: 0px !important;
    }

    #LeadLogsShow > div:first-child {
        margin-top: 20px !important;
    }

    .modal-header, #StatusHeader, #select2parent {
        background: #7ea3c321
    }

    .modal-body section {
        margin-bottom: 20px;
        background: #fff;
        padding: 15px 30px !important;
    }

    #myDiv .btn-header-cmt:hover {
        background-color: #60c9f8 !important;
        color: #fff !important;
    }

    #submyDiv {
        height: 5px;
        background-color: #f1f1f1 !important;
        position: absolute;
        z-index: 1;
        margin-left: 10px;
        margin-top: -10px;
    }

    .btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:active:focus, .btn:focus {
        outline: unset !important;
    }

    #myDiv {
        background: #fff;
        padding: 10px 10px 0 0;
    }

        #myDiv .active {
            border-bottom: 4px solid blue !important;
            background-color: #fff !important;
            color: blue !important;
            font-weight: bold;
            z-index: 2;
        }

    .btn-header-cmt {
        border-top: unset;
        border-left: unset;
        border-right: unset;
        margin: 0 !important;
        background-color: #fff !important;
        border-color: #fff !important;
        color: #000 !important;
        width: 10%;
    }

    .bg-info {
        background-color: #03a9f4a1;
    }

    #StatusHeader label:hover {
        background-color: #64da69cc !important;
        transform-origin: left;
        width: fit-content !important;
        clip-path: polygon(0% 0%, 100% 0%, 100% 50%, 100% 100%, 0 100%) !important;
        box-shadow: inset 200px 0em 0 0 #64da6954;
        font-weight: bold;
        border-radius: 5px;
    }

    #StatusHeader label {
        width: 5% !important;
        /* background-color: #03a9f4a1 !important;*/
        padding: 5px;
        transition: all 1s;
        text-transform: uppercase;
        border-radius: 5px;
        margin-left: -4px;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        border-right: unset;
    }

    #muc-luc li:hover {
        background: #12e4ff;
    }

    #muc-luc ul {
        text-transform: uppercase;
        white-space: nowrap;
        overflow: hidden;
        width: 100%;
        margin: 0 !important;
    }

    #muc-luc li {
        padding: 5px 0;
        border-bottom: 1px solid #0000002b;
        margin: 0 !important;
        padding-left: 10px;
    }

    #searchInputForm span {
        height: 86% !important;
        background: #12e4ff;
        display: inline-table;
        border-radius: 3px;
        margin: 0 2px;
        padding-left: 5px;
    }

    #searchInputForm button {
        height: 100%
    }

    #searchInputForm {
        display: flex;
        align-items: center;
    }

    #SearchLeadForm {
        box-shadow: 0px 0px 15px #000;
    }

    .width-34 {
        width: 34%;
    }

    section label {
        color: #3F51B5;
    }

    .custom-class {
        color: #3f4d9d;
        vertical-align: middle;
    }

    .modal-open .modal {
        overflow-y: unset;
    }

    #muc-luc {
        border-right: 1px solid #337ab7;
        width: 35%;
    }

    .select2-container {
        width: 100% !important;
    }

    .content {
        width: 80%;
        overflow-y: auto;
        overflow-x: hidden;
    }

    #searchPanelContent {
        display: flex;
        height: 540px;
        overflow: hidden;
        padding-right: 0px;
        padding-left: 0px;
    }

    #btnAdd {
        position: sticky;
        bottom: 0% !important;
    }

    .select2-container .select2-selection--multiple .select2-selection__rendered {
        display: block !important;
    }

    @@media (max-width : 1480px) {
        #modal-search {
            left: 75px !important;
            width: 50% !important;
        }

        .content {
            width: 90%;
        }
    }

    @@media (max-width : 1440px) {
        #modal-search {
            left: 18px !important;
            width: 44% !important;
        }
    }


    @@media (max-width : 1440px) {
        #modal-search {
            left: 120px !important;
            width: 44% !important;
        }

        .content {
            width: 65%;
        }

        .width-34 {
            width: 80%;
            margin-bottom: 10px;
        }
    }

    #searchPanelContent input {
        border: 1px solid;
        margin-right: 10px;
    }

    .modal-backdrop.in {
        display: none;
    }

    .table > thead:first-child > tr:first-child > th {
        background: #fff;
        color: #152cad !important;
    }

    .btn-success, .btn-success.focus, .btn-success:focus {
        background-color: rgba(255, 255, 255, 0.2) !important;
        border-color: #fff !important;
        border: 0px solid !important;
    }

    .btn-search, .btn-setting {
        display: inline-block;
        float: left;
        width: 33px;
        height: 24px;
        cursor: pointer;
        background: url('/assets/img/btn_title_right.gif') no-repeat;
        margin: 0px;
        margin-left: -33px;
    }

    .btn-search {
        background-position: -1px -24px;
    }

        .btn-search:hover {
            background-position: -35px -24px;
        }

    .btn-setting:hover {
        background-position: -34px 0px;
    }

    .tag-container {
        display: inline-block;
        /*            border: 1px solid #ccc;*/
        padding: 5px;
    }

        .tag-container span {
            background-color: #f0f0f0;
            padding: 3px 5px;
            margin-right: 5px;
            border-radius: 3px;
        }

    #btnSearchLead, #btnCloseSearch, #saveLeadModal, #btnCloseAdd {
        margin: 0;
        border-radius: 3px;
        padding: 3px 20px;
    }

    #saveLeadModal {
        margin-left: 20px;
        padding: 3px 25px !important;
    }

    #searchPanelContent span {
        background-color: unset;
        /* width:200px;*/
    }

    .select2-results__option[aria-selected] {
        background: #fff;
    }

    /*thanh*/
    .nav-item {
        align-self: center !important;
    }

        .nav-item .active {
            background-color: rgba(255, 255, 255, 0.2) !important;
        }

    .nav-link {
        padding: 5px 15px !important;
        color: white !important;
    }

        .nav-item:hover,
        .nav-link:hover {
            background-color: #629B58 !important;
            border-radius: 4px;
        }

    .nav-tabs[class*=tab-color-] > li > a, .nav-tabs[class*=tab-color-] > li > a:focus, .nav-tabs[class*=tab-color-] > li > a:hover {
        margin-right: 1px !important;
    }

    .nav-tabs.tab-color-blue > li.active > a, .nav-tabs.tab-color-blue > li.active > a:focus, .nav-tabs.tab-color-blue > li.active > a:hover {
        color: #213293 !important;
        border-color: #7DB4D8 #7DB4D8 transparent;
        font-weight: bold !important;
        transition: 0.5s;
    }

    .img_user {
        width: 40px !important;
        height: 40px !important;
        margin: 0 auto;
        /* display: block; */
        border-radius: 100%;
        border: 2px solid;
    }

    .user_check {
        width: 30px !important;
    }

    #btnSendCmt {
        margin-top: .5rem !important;
    }

    .green {
        position: absolute;
        top: -4.5rem;
        align-items: center;
        right: -1.6%;
        font-size: 1.4rem;
        display: flex;
        gap: 2rem;
        padding-right: 5%;
        color: #69AA46 !important;
        text-transform: capitalize;
    }

    a.btn.btn-sm.btn-white.btn-primary.pull-right.red {
        height: 25px;
        margin: 0;
    }

    .topp {
        margin-top: -12px !important;
    }

    .modal-dialog.modal-sm {
        margin-top: 0;
    }

    div#display-image {
        width: 50%;
        margin: auto;
    }

    .mar-top {
        margin-top: 15px;
        display: flex;
        align-items: center;
        gap: .6rem;
    }

    .savesection {
        padding: 1.5px 5px;
        outline: none;
        border: none;
        border-radius: 3px;
        background: #20be6d !important;
        color: #fff;
        cursor: pointer;
        margin-right: 2px;
    }

    .btn-createNew {
        padding: 1.8px 5px;
        outline: none;
        border: none;
        border-radius: 3px;
        background: #20be6d !important;
        color: #fff;
        cursor: pointer;
        margin-right: 2px;
    }

    .editsection {
        padding: 1.1px 8px;
        outline: none;
        font-size: 12.7px;
        border: none;
        border-radius: 3px;
        background: #428BCA !important;
        cursor: pointer;
        color: #fff;
        margin-left: 2px;
    }

        .savesection:hover,
        .editsection:hover {
            transform: scale(.98);
            transition: .3s linear;
            box-shadow: 0 5px 10px rgba(0,0,0, .3);
        }

    label.control-label.col-md-2 {
        padding: 0 25px;
    }

    input#StartDate {
        margin: 0 14px !important;
    }

    .truoc label.control-label.col-lg-5.col-md-4.col-sm-4 {
        width: 43%;
    }

    .distance-perInfomation .clearfix {
        width: 45rem !important;
        margin-left: -12rem !important;
    }

        .distance-perInfomation .clearfix .input-append input {
            width: 45rem !important;
        }

    .distance-contactInfo .clearfix {
        width: 115rem !important;
        margin-left: -43rem !important;
    }

    .distance-customerReviews .clearfix {
        width: 100rem !important;
        margin-left: -33rem !important;
    }

    .distance-cskh .clearfix {
        width: 19rem !important;
        margin-left: 2px !important;
    }

        .distance-cskh .clearfix .input-append input {
            width: 189px !important;
        }

    .table-responsive span .control-label {
        width: 14rem;
    }
    /*label.control-label.col-md-2 {
        width: 10rem;
        padding: 0;
    }*/
    input#product_barcode {
        margin-left: 17px;
    }
</style>
@helper GridColumnName(string name, int id)
{
    name = string.IsNullOrEmpty(name) ? "No Title" : name;
    <a href="@Url.Action("UsingServiceLog", "Service", new {area="Sale", Id = id })">@name</a>

}

@helper GridColumnStaffName(int? userId)
{
    var staff = Common.GetStaffByUserId(userId.Value);
    <span>@(staff != null ? staff.Name : "-")</span>
}
@helper GridColumnCommand(int? id)
{
    <p>
        <button name="Delete" value="@id" type="submit" class="Delete btn btn-mini btn-danger">
            <i class="ace-icon fa fa-trash bigger-120"></i>
        </button>

    </p>

}
@if (ViewBag.IsNullLayOut != true)
{
    using (Html.BeginPageHeaderContainer(pageSetting))
    {
    }
}
@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

<div class="row">
    <div class="col-sm-12">
        <h4 class="green">
            Khách hàng: @Model.CompanyName - (@Model.Code)
            <a class="btn btn-sm btn-white btn-primary pull-right red" onclick="OpenPopup('@Url.Action("LiabilitiesDetail", "TransactionLiabilities", new { TargetModule = "Customer", TargetCode = Model.Code, TargetName = Model.CompanyName, popup = true })', 'Chi tiết công nợ', 0, 500)">
                <b>Công nợ: @(Model.Liabilities >= 0 ? Common.PhanCachHangNgan2(Model.Liabilities) : "-" + Common.PhanCachHangNgan2(Math.Abs(Model.Liabilities)))</b>
            </a>
        </h4>
        @using (Html.BeginForm_AceStyle((string)ViewBag.Title, "EditNT", "Customer", null, FormMethod.Post, new { id = "Edit", @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreatedUserId)
            @Html.HiddenFor(model => model.CreatedDate)
            @Html.HiddenFor(model => model.IsDeleted)
            @Html.HiddenFor(model => model.Image)
            @Html.HiddenFor(model => model.Code)
            @Html.HiddenFor(model => model.FacebookId)
            @Html.HiddenFor(model => model.PlayId)
            @*@Html.HiddenFor(model => model.CustomerType)*@
            <input type="hidden" name="IsPopup" value="@Request["IsPopup"]" />
            <div class="tabbable top-10 topp">
                @*<ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer1">
                        @*<li id="tab_li_1" class="active">
                        <a data-toggle="tab" href="#tab_1">Số lần sử dụng dịch vụ</a>
                    </li>*@
                @*<li id="tab_li_2" class="active">
                            <a data-toggle="tab" href="#tab_2">Lịch sử hóa đơn</a>
                        </li>
                        <li id="tab_li_2" class="active">
                            <a data-toggle="tab" href="#tab_2">Lịch sử hóa đơn</a>
                        </li>
                    </ul>*@

                <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer1">
                    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("ThongTinKhachHang", "Customer", "Account"))
                    {
                        <li class="active">
                            <a data-toggle="tab" href="#tab0">CSKH</a>
                        </li>
                    }
                    <li>
                        <a data-toggle="tab" href="#tab1">@Wording.PersonalInfo</a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#tab2">@Wording.ResidenceInfo</a>
                    </li>
                    <li id="li-tab3">
                        <a data-toggle="tab" href="#tab3">Đánh giá khách hàng</a>
                    </li>
                    <li id="li-tab4">
                        <a data-toggle="tab" href="#tab4">Nhân viên quản lý</a>
                    </li>
                    <li id="li-tab5">
                        <a data-toggle="tab" href="#tab5">Khách hàng giới thiệu</a>
                    </li>
                    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("LichSuHoaDon", "Customer", "Account"))
                    {
                        <li id="tab_li_HD">
                            <a data-toggle="tab" href="#tab_HD">Lịch sử hoá đơn</a>
                        </li>
                    }

                    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("LichSuXepHang", "Customer", "Account"))
                    {
                        <li id="tab_li_XH">
                            <a data-toggle="tab" href="#tab_XH">Lịch sử xếp hạng</a>
                        </li>
                    }
                    <li id="tab_li_Lead">
                        <a data-toggle="tab" href="#tab_Lead">Cơ hội</a>
                    </li>
                </ul>

                <div class="tab-content">
                    <div id="tab0" class="tab-pane in active">
                        <div class="row">
                            <div class="col-sm-6" style="width: 400px;">
                                <div class="row ">
                                    <div class="col-sm-12">
                                        @{
                                            var htmlAttributes = new Dictionary<string, object>
{
                                                                                                                                                                                                                                                            { "class" , "form-control"},
                                                                                                                                                                                                                                                            { "placeholder", "ID CRM" }
                                                                                                                                                                                                                                                          };
                                            htmlAttributes.Add("disabled", "disabled");
                                            var htmlAttributes2 = new Dictionary<string, object>
{
                                                                                                                                                                                                                                                            { "class" , "form-control"},

                                                                                                                                                                                                                                                          };
                                            htmlAttributes2.Add("disabled", "disabled");

                                        }
                                        <div style="">
                                            <span class="distance-cskh">
                                                @Html.CustomDropDownListFor(model => model.BranchId, SelectListHelper.GetSelectList_Branch(Model.BranchId, Wording.Empty), htmlAttributes2)
                                            </span>
                                            <span class="distance-cskh">
                                                @Html.CustomTextboxFor(model => model.FirstName, null, null, WidthType.span12, true, htmlAttributes2)
                                            </span>

                                        </div>


                                    </div>

                                    @*//Tạm thời đóng phần ảnh*@
                                    <!--<div class="col-sm-2 ">-->
                                    @*<div class="wrap-btn-upload">

                                            <input type="file" id="file-image" name="file-image" class="file-image" onchange="previewFileImage(event, '#display-image img')" />
                                        </div>*@
                                    <!--<div class="text-center" id="display-image">
                                            <img class="avt" style="float:right;" src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image, "Customer", "user"))" width="250" height="300" title="@Model.CompanyName" id="" />
                                        </div>
                                    </div>-->
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">

                                        <div style="">
                                            <div class="setWidth" style=" width: 376px !important;">
                                                <span class="distance-cskh">
                                                    @Html.CustomTextboxFor(model => model.LastName, null, null, WidthType.span12, true, htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomDropDownListFor(model => model.tenNguonkhach, NguonKhach, htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomDropDownListFor(model => model.ManagerStaffId, SelectListHelper.GetSelectList_User(Model.FullName, Wording.Empty), htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomDropDownListFor(model => model.NhomHuongDS, SelectListHelper.GetSelectList_User_kd(Model.FullName, Model.BranchId.ToString()), htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.DateInput(model => model.Birthday, "dd/MM/yyyy", "99/99/9999", true, WidthType.span12)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomDropDownListFor(model => model.Gender, SelectListHelper.GetSelectList_Gender(Model.Gender), htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomTextboxFor(model => model.Note, null, null, WidthType.span12, true, htmlAttributes2)
                                                </span>
                                                <span class="distance-cskh">
                                                    @Html.CustomTextboxFor(model => model.cus_crm, null, null, WidthType.span12, true, htmlAttributes)
                                                </span>
                                            </div>
                                        </div>


                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6" id="tabright" style="width: 88.5rem "></div>
                        </div>

                    </div>
                    @*<div class="tab-pane active clearfix" id="tab_1">
                            @{Html.RenderAction("UsingService", "Service", new { area = "Sale", CustomerId = Model.Id, popup = true, IsNullLayOut = true });}
                        </div>*@
                    <div id="tab1" class="tab-pane">
                        <div class="row">
                            <div class="col-sm-6">
                                @{
                                    var htmlAttributes1 = new Dictionary<string, object>
{
                                            { "class" , "form-control"},
                                            { "placeholder", "ID CRM" }
                                          };
                                    htmlAttributes1.Add("disabled", "disabled");
                                    var readonlyy = new Dictionary<string, object>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                            { "readonly" , "readonly"}                                          };

                                }

                                <span class="distance-perInfomation">
                                    @Html.CustomDropDownListFor(model => model.BranchId, SelectListHelper.GetSelectList_Branch(Model.BranchId, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                                </span>

                                <span class="distance-perInfomation">
                                    @Html.CustomDropDownListFor(model => model.tenNguonkhach, NguonKhach, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)

                                </span>

                                <span class="distance-perInfomation">
                                    @Html.CustomTextboxFor(model => model.FirstName, null, null, WidthType.span12, true, readonlyy)

                                </span>

                                <span class="distance-perInfomation">
                                    @Html.CustomTextboxFor(model => model.LastName, null, null, WidthType.span12, true, readonlyy)

                                </span>

                                <span class="distance-perInfomation">
                                    @Html.CustomDropDownListFor(model => model.NhomHuongDS, SelectListHelper.GetSelectList_User_kd(Model.FullName, Model.BranchId.ToString()), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)

                                </span>

                                <!--<span class="distance-perInfomation">-->
                                @*                        @Html.CustomDroepDownListFor(model => model.ManagerStaffId, SelectListHelper.GetSelectList_User(Model.FullName, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)*@
                                <!--</span>-->
                                <span class="distance-perInfomation">
                                    @Html.DateInput(model => model.Birthday, "dd/MM/yyyy", "99/99/9999", true, true, "control-label col-lg-5 col-md-4 col-sm-4")

                                </span>

                                <span class="distance-perInfomation">
                                    @Html.CustomDropDownListFor(model => model.Gender, SelectListHelper.GetSelectList_Gender(Model.Gender), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)

                                </span>
                                <span class="distance-perInfomation">
                                    @Html.CustomTextboxFor(model => model.Note, null, null, WidthType.span12, true, readonlyy)

                                </span>
                                <span class="distance-perInfomation">
                                    @Html.CustomTextboxFor(model => model.cus_crm, null, null, WidthType.span12, true, htmlAttributes1)

                                </span>
                                <div class="mar-top">
                                    <button class="editsection" type="button" data-tab="1">Sửa</button>
                                    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SaveTab1", "Customer", "Account"))
                                    {
                                        <button class="savesection" type="button" data-tab="1" name="Submit" value="Save">Lưu</button>

                                    }

                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="wrap-btn-upload">
                                    <a class="btn btn-primary btn-sm btn-white"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                                    <input type="file" id="file-image" name="file-image" class="file-image" accept="image/*" onchange="previewFileImage(event, '#display-image img')" />
                                </div>
                                <div class="text-center" id="display-image">
                                    <img src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image, "Customer", "user"))" width="250" height="300" title="@Model.CompanyName" id="imgAvt" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="tab2" class="tab-pane">

                        <div class="">
                            <span class="distance-contactInfo">
                                @Html.CustomDropDownListFor(model => model.CityId, SelectListHelper.GetSelectList_Location("0", Model.CityId, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomDropDownListFor(model => model.DistrictId, SelectListHelper.GetSelectList_Location(Model.CityId, Model.DistrictId, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomDropDownListFor(model => model.WardId, SelectListHelper.GetSelectList_Location(Model.DistrictId, Model.WardId, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span12, true, readonlyy)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomTextboxFor(model => model.Phone, null, null, WidthType.span12, true, readonlyy)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomTextboxFor(model => model.Mobile, null, null, WidthType.span12, true, readonlyy)
                            </span>
                            <span class="distance-contactInfo">
                                @Html.CustomTextboxFor(model => model.Email, null, null, WidthType.span12, true, readonlyy)
                            </span>


                        </div>

                        <div class="mar-top">
                            <button class=" editsection" type="button" data-tab="2">Sửa</button>
                            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SaveTab2", "Customer", "Account"))
                            {
                                <button class=" savesection" type="button" data-tab="2" name="Submit" value="Save">Lưu</button>

                            }
                        </div>
                    </div>
                    <div id="tab3" class="tab-pane">
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.CustomerGroup, CustomerGroupList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.CustomerType, CustomerTypeList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.EconomicStatus, EconomicStatusList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <!--<span class="distance-customerReviews">-->
                        @*@Html.CustomDropDownListFor(model => model.EconomicStatus, SelectListHelper.GetSelectList_Category(Model.EconomicStatus, null, "value"), null, null)*@
                        <!--</span>-->
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.SkinSkinLevel, SkinLevel, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.HairlLevel, HairlLevel, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomDropDownListFor(model => model.GladLevel, GladLevel, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.KhCuMuonBo, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.KhCuThanPhien, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.KhLauNgayKhongTuongTac, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.KhMoiDenVaHuaQuaiLai, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.KhMoiDenVaKinhTeYeu, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.IsBonusSales, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <span class="distance-customerReviews">
                            @Html.CustomSwitchesFor(model => model.isLock, SwitchesStyle.CheckboxStyle, true)
                        </span>
                        <div class="mar-top">
                            <button class=" editsection" type="button" data-tab="3">Sửa</button>
                            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SaveTab3", "Customer", "Account"))
                            {
                                <button class=" savesection" type="button" data-tab="3" name="Submit" value="Save">Lưu</button>

                            }
                        </div>

                    </div>
                    <div id="tab4" class="tab-pane clearfix">
                        <div class="table-responsive">
                            <span>
                                @Html.CustomDropDownListFor(model => model.ManagerStaffId, SelectListHelper.GetSelectList_User(Model.FullName, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault, disabled: true)
                            </span>

                            <div id="datetimeinput" class="form-group ">
                                <label class="control-label col-md-2  " for="StartDate" style="width: 152px; ">Ngày bắt đầu</label>
                                <div class="control-value col-md-4">
                                    <div class="clearfix" style="display:inline-block;">
                                        <input readonly type="tel" id="StartDate" name="StartDate" maxlength="10" placeholder="dd/mm/yyyy" oninput="this.value = DDMMYYYY(this.value, event)" />
                                    </div>
                                </div>
                            </div>
                            <div id="CreateCusUserTable">
                                @Html.Grid(Model.CustomerUserList).Columns(columns =>
                     {
                     columns.Add().Titled("#").SetWidth(20).RenderValueAs(o =>
                     {
                     rowNumber++;

                     return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
});
columns.Add(u => u.FullName).Titled(Wording.FullName).Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);
columns.Add(u => u.StartDate).Format("{0:dd/MM/yyyy}").Titled(Wording.StartDate).SetWidth(100);
columns.Add(u => u.EndDate).Format("{0:dd/MM/yyyy}").Titled(Wording.EndDate).SetWidth(100);
columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(20);
}).WithPaging(10)

                            </div>
                        </div>

                        <div class="mar-top">
                            <button class=" editsection" type="button" data-tab="4">Sửa</button>
                            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SaveTab4", "Customer", "Account"))
                            {
                                <button data-tab="4" id="CreateCusUser" name="Create" value="CreateCusUser" type="button" class="CreateCusUser btn btn-mini savesection btn-createNew">
                                    <i class="ace-icon fa fa-plus"></i>
                                    @Wording.CreateNew
                                </button>
                            }

                        </div>
                    </div>



                    <div id="tab5" class="tab-pane clearfix">
                        <div class="">

                            @*@Html.CustomDropDownListFor(model => model.IdCustomer_Gioithieu, SelectListHelper.GetSelectList_Customer(Model.FullName, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)*@
                            <label>Khách hàng<label style="color:red;">*</label></label>
                            @*@Html.TextBox("KH_TUONGTAC_ID", Request["KH_TUONGTAC_ID"], new { @class = "hide", autocomplete = "off", placeholder = "Khách hàng", style = "width:150px" })*@
                            @Html.TextBox("IdCustomer_Gioithieu", Request["IdCustomer_Gioithieu"], new { @class = "hide", autocomplete = "off", placeholder = "Khách hàng", style = "width:150px" })

                            <input id="product_barcode" type="text" placeholder="Tên khách hàng" autocomplete="off" style="width:200rem;" readonly />
                            <select id="productSelectList" name="productSelectList" style="width:302px" disabled>
                                <option value="">- Tìm khách hàng -</option>
                                @if (customerList != null)
                                {
                                    foreach (var item in customerList)
                                    {
                                        <option value="@item.Id" data-selected="0" data-value="@item.Id | @(Common.KiemTraTonTaiHinhAnh(item.Image, "product-image-folder", "product"))  | @(item.Code + " - " + item.CompanyName )">@item.Code - @item.CompanyName</option>
                                    }
                                }
                            </select>

                            <div id="datetimeinput" class="form-group" style="border: none !important">
                                <label class="control-label col-md-2  " for="_StartDate" style="padding: 0; width: 10rem; color: #333">Ngày bắt đầu</label>
                                <div class="control-value col-md-4">
                                    <div class="clearfix" style="display:inline-block;">
                                        <input readonly type="tel" id="_StartDate" name="_StartDate" maxlength="10" placeholder="dd/mm/yyyy" oninput="this.value = DDMMYYYY(this.value, event)" style="width: 22.9rem;" />
                                    </div>
                                    <script>
                                        function DDMMYYYY(value, event) {
                                            let newValue = value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');

                                            const dayOrMonth = (index) => index % 2 === 1 && index < 4;

                                            // on delete key.
                                            if (!event.data) {
                                                return value;
                                            }

                                            return newValue.split('').map((v, i) => dayOrMonth(i) ? v + '/' : v).join('');;
                                        }
                                    </script>
                                </div>
                            </div>



                            <div id="CreateCustomerRecommendTable">
                                @Html.Grid(Model.CustomerRecommendList).Columns(columns =>
                          {
                          columns.Add().Titled("#").SetWidth(20).RenderValueAs(o =>
                          {
                          rowNumber++;

                          return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
});
columns.Add(u => u.FullName).Titled(Wording.FullName).Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);
columns.Add(u => u.Code).Titled("Mã KH").Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);

columns.Add(u => u.StartDate).Format("{0:dd/MM/yyyy}").Titled(Wording.StartDate).SetWidth(100);
//columns.Add(u => u.EndDate).Format("{0:dd/MM/yyyy}").Titled(Wording.EndDate).SetWidth(100);
//columns.Add(u => u.CustomerId).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(20);
}).WithPaging(10)

                            </div>

                        </div>

                        <div class="mar-top">
                            <button class="btn-primary editsection" type="button" data-tab="5">Sửa</button>
                            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SaveTab5", "Customer", "Account"))
                            {
                                <button data-tab="5" id="CreateCustomerRecommend" name="Create" value="CreateCustomerRecommend" type="button" class="CreateCustomerRecommend btn btn-mini savesection  btn-createNew">
                                    <i class="ace-icon fa fa-plus"></i>
                                    @Wording.CreateNew
                                </button>
                            }
                            
                        </div>
                    </div>
                    <div class="tab-pane  clearfix" id="tab_HD">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width:130px">Ngày chứng từ</th>
                                        <th style="width:110px">Mã chứng từ</th>
                                        <th style="width:180px">Nhân viên lập phiếu</th>
                                        <th style="width:100px">Số tiền</th>
                                        <th>Chi nhánh</th>
                                        <th>Còn nợ</th>
                                    </tr>
                                </thead>



                                <tbody class="detailList">
                                    @foreach (var i in serviceInvoice)
                                    {
                                        <tr>
                                            <td>@i.CreatedDate.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td class="has-error">

                                                @if (Request["IsDetailChart"] == null || Request["IsDetailChart"] != "true")
                                                {
                                                    <a href="@Url.Action("Detail", "ProductInvoice", new { area = "Sale", Id = i.Id })" target="_blank">@i.Code</a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("Detail", "ProductInvoice", new { area = "Sale", Id = i.Id, IsPopUp = true, IsChart = true })" target="_blank">@i.Code</a>
                                                }
                                            </td>
                                            <td>@i.StaffCreateName</td>
                                            <td class="text-right">@Common.PhanCachHangNgan2(i.TotalAmount)</td>
                                            <td>@i.BranchName</td>
                                            <td class="text-right">
                                                @CommonSatic.ToCurrencyStr(i.TongConNo, null)
                                            </td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                        </div>

                    </div>

                    <div class="tab-pane clearfix" id="tab_XH">
                        @*<div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th style="width:130px">Năm</th>
                                            <th style="width:110px">Xếp hạng</th>
                                        </tr>
                                    </thead>
                                    <tbody class="detailList">
                                        @foreach (var i in serviceLogVip)
                                        {
                                            <tr>
                                                <td>@i.Year</td>
                                                <td>@i.Ratings</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>*@
                    </div>            

                    <div class="tab-pane clearfix" id="tab_Lead" style="margin-top: -1.2rem;">
                        <div style=" display: flex; align-items: center; justify-content: space-between; width: 100%; margin: 1rem 0; ">
                            <div></div>
                            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("AddNewModal", "AdviseCard", "Sale"))
                            {
                                <button type="button" id="addNew" style="border-radius: 5px !important; padding: 4px 20px;" class="btn btn-mini btn-primary">
                                    Thêm mới
                                </button>
                            }
                        </div>
                        <div class="table-responsive">
                            <table id="lctbl" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <td>Stt</td>
                                        <td>Tên cơ hội</td>
                                        <td>Tên</td>
                                        <td>Nhân viên tiếp nhận</td>
                                        <td>Ngày tạo</td>
                                        <td>Email</td>
                                        <td>Địa chỉ</td>
                                        <td>Số điện thoại</td>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
            <input hidden name="LeadId" value="@Model.LeadId" />
            <input hidden name="isLead" value="@Model.isLead.ToString()" />

        }

    </div>

</div>

@using (Html.BeginButtonContainer(pageSetting))
{

    <a class="btn btn-mini btn-primary" onclick="DetailLead(@Model.LeadId,2)">
        <i class="ace-icon fa fa-calendar"></i>
        Xem Lead
    </a>
    <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save" form="Edit">
        <i class="ace-icon fa fa-save"></i>
        @Wording.Save
    </button>


    //if (Model.IsActived != true)
    // {
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "AdviseCard", "Sale"))
    {
        @*<a class="btn btn-primary btn-mini" target="_blank" href="@Url.Action("Create", "AdviseCard", new { TargetId = Model.Id, TargetModule="Customer" })">
                <i class="ace-icon fa fa-plus"></i>
                Lập phiếu yêu cầu
            </a>*@
        <a class="btn btn-primary btn-mini" onclick="OpenPopup('@Url.Action("Create", "AdviseCard",new { area="Sale",Id=Model.Id, IsPopup =false})','',0,0)">
            <i class="ace-icon fa fa-plus"></i>
            Lập phiếu tư vấn
        </a>
    }
    //}

}
<div style="z-index: 1030; height: 110%; padding-left: 0px;" id="addNewContent" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
</div>

@section Scripts {

    <link href="/Scripts/ckeditor/contents.css" rel="stylesheet" />
    <script src="/Scripts/ckeditor/ckeditor.js"></script>
    <link href="/Scripts/RadCombobox_v1/RadComboBoxLite.css" rel="stylesheet" />
    <script src="/Scripts/RadCombobox_v1/rabCombobox.js"></script>
    <script src="/Scripts/combojax.js?=vs1.01"></script>
    <link href="/assets/css/combojax.css" rel="stylesheet" />

    <script src="~/Scripts/area_sale/Supplier.js"></script>

    <script type="text/javascript">
        function addNew() {
            debugger
            $.ajax({
                url: "/AdviseCard/AddNewModal?type=1&Id=@Model.Id&Email=" + $('#tab2 input[name=Email]').val() + "&Address=" + $('#tab2 input[name=Address]').val() + "&Phone=" + $('#tab2 input[name=Phone]').val() + "&LastName=" + $('#tab1 input[name=LastName]').val(),
                method: "get",
                dataType: "html",
                success: function (data) {
                    $("#addNewContent").html(data)
                    $('.bs-example-modal-sm').modal()
                    $('#themmoi #saveLeadModal').click(f5DsLeadCustomer)
                }
            })
        }
        function f5DsLeadCustomer() {
            /*debugger*/
            $.ajax({
                url: "/Customer/DsLeadCustomer?Id=@Model.Id",
                method: "get",
                dataType: "html",
                success: function (data) {
                    $("#lctbl tbody").html(data)
                }
            })
        }

        //upload file image
        $(document).ready(function () {
            $('#addNew').click(addNew)
            f5DsLeadCustomer()
            $('[type="file"]').change(function () {
                var fileInput = $(this);
                if (fileInput.length && fileInput[0].files && fileInput[0].files.length) {
                    var url = window.URL || window.webkitURL;
                    var image = new Image();
                    image.onerror = function () {
                        alert("File tải lên bắt buộc phải là hình ảnh (.png, .jpg, .jpeg,...)");
                        $("#imgAvt").attr("src", "@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image, "Customer", "user"))");
                    };
                    image.src = url.createObjectURL(fileInput[0].files[0]);
                }
            });
        });
        $(function () {
            $('#PHANLOAI_TUONGTAC').attr("disabled", "disabled");
            $('#TINHTRANG_TUONGTAC').attr("disabled", "disabled");

            $('#LOAI_TUONGTAC').change(function () {
                var selectedEventType = this.options[this.selectedIndex].value;
                if (selectedEventType != "TOC") {
                    $('.TINHTRANG').hide().filter('#' + selectedEventType).show();
                    $('#PHANLOAI_TUONGTAC').attr("disabled", "disabled");
                    $('#TINHTRANG_TUONGTAC').removeAttr('disabled');
                    $('#PHANLOAI_TUONGTAC').val("");
                    $('#TINHTRANG_TUONGTAC').val("");
                }
                else {
                    $('.TINHTRANG').hide().filter('#' + selectedEventType).show();
                    $('#PHANLOAI_TUONGTAC').removeAttr('disabled');
                }
            });
            $('#PHANLOAI_TUONGTAC').change(function () {
                var selectedEventType = this.options[this.selectedIndex].value;
                if (selectedEventType != null) {
                    $('.TINHTRANG').hide().filter('#' + selectedEventType).show();
                    $('#TINHTRANG_TUONGTAC').removeAttr("disabled");
                } else {
                    $('#TINHTRANG_TUONGTAC').attr("disabled", "disabled");
                }
            });

            //$('#NGAYTUONGTAC_TIEP').datetimepicker({
            //    format: 'DD/MM/YYYY HH:mm'
            //});

            $('#NGAYLAP').datetimepicker({
                format: 'dd/MM/yyyy'
            });
            $('#GIO_TUONGTAC').datetimepicker({
                format: 'HH:mm'
            });
        });

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })
        function initCkeditor() {
            $('.ckeditor').ckeditor({
                "extraPlugins": 'imagebrowser',
                "imageBrowser_listUrl": "@Url.Action("ListJson","Images")",
                // Define the toolbar groups as it is a more accessible solution.
                toolbarGroups: [
                    { "name": "document", "groups": ["mode", "document", "doctools"] },
                    { "name": "editing", "groups": ["find", "selection", "spellchecker"] },
                    { "name": "forms" },
                    { "name": "tools" },
                    { "name": "basicstyles", "groups": ["basicstyles", "cleanup"] },
                    { "name": "clipboard", "groups": ["clipboar", "undo"] },
                    { "name": "links", "groups": ["links"] },
                    { "name": "paragraph", "groups": ["list", "blocks"] },
                    { "name": "insert", "groups": ["insert"] },
                    { "name": "styles", "groups": ["styles"] },
                    //{ "name": "about", "groups": ["about"] },
                    { "name": "styles" },
                    { "name": "colors" },
                    { "name": "align", "groups": ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] }

                ],
                // Remove the redundant buttons from toolbar groups defined above.
                removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar'
            });
        }

        $(document).ready(function () {
            //init rcb chọn sản phẩm
            $('#productSelectList').radComboBox({
                colTitle: 'ID, Hình, Tên khách hàng',
                colValue: 1,
                colImage: 2,
                colHide: '1',
                colSize: '0px,50px,',
                colClass: ',,',
                //width: 600,
                height: 300,
                boxSearch: true,
                colSearch: 2
            });
            //Hiển thị giá và tính thành tiền khi chọn sản phẩm
            $('#productSelectList').on('change', function () {
                var $this = $(this);
                var selected = $this.find("option:selected");

                if (selected.val() == '' || $('#product_item_' + selected.val()).length > 0)
                    return;
                $('#IdCustomer_Gioithieu').val(selected.val());
                //$('#CustomerName').val(selected.text());
                $('#product_barcode').val(selected.text());

            });
            $('#product_barcode').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    $('#product_barcode').trigger('change');
                }
            });

            //khi nhập barcode
            $('#product_barcode').change(function () {
                var $this = $(this);
                if ($this.val() != '') {

                    var barcode = $this.val();
                    //đặt lại giá trị rỗng
                    $this.val('').focus();

                    var valueSearch = searchProductByBarCodeContain(barcode);
                    if (valueSearch == undefined) {
                        alert('Không tìm thấy khách hàng với mã code trên!');
                        return;
                    }

                    $('#productSelectList').val(valueSearch).trigger("change");
                }
            });
        });
        function searchProductByBarCodeContain(barcode) {
            barcode = barcode.toLowerCase();
            //var $productSelect = $('.detail_item_id').first();

            var $optionList = $("#productSelectList").find('option');

            var arrResulft = [];
            for (var i = 0; i < $optionList.length; i++) {
                var data_code = $($optionList[i]).data('code') != undefined ? $($optionList[i]).data('code').toString().toLowerCase() : undefined;
                if (barcode.indexOf(data_code) != -1)
                    arrResulft.push($($optionList[i]).attr('value'));

                if (arrResulft.length == 1) {
                    return arrResulft[0];
                }
            }

            return arrResulft[0];
        };


        $('#NGAYTUONGTAC_TIEP').datetimepicker({
            format: 'dd/MM/yyyy HH:mm'

        });
        $("#Save").click(function () {
            var endDate = new Date();
            endDate = document.getElementById("NGAYTUONGTAC_TIEP").value;

            //var today = new Date();
            //var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();
            //var time = today.getHours() + ":" + today.getMinutes();
            //var dateTime = date + ' ' + time;

            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            var hh = today.getHours();
            var MM = today.getMinutes();
            today = dd + '/' + mm + '/' + yyyy + ' ' + hh + ':' + MM;


            if (endDate == "") {
                return true;
            }
            else {
                if ((endDate < today)) {
                    alert("Ngày tương tác tiếp phải lớn hơn ngày hiện tại");
                    document.getElementById("NGAYTUONGTAC_TIEP").value = "";
                    return false;
                }
            }
            var startDate = document.getElementById("NGAYLAP").value;


            if (endDate < startDate) {
                alert("End date should be greater than Start date");
                document.getElementById("NGAYTUONGTAC_TIEP").value = "";
                return false;
            }
            return true;
        });

        var url = '/api/BackOfficeServiceAPI/FetchLocation';
        var districts = $('#DistrictId'); // cache it
        var ward = $('#WardId');

        $("#CityId").change(function () {
            ShowLoading();
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            if (id != '') {
                $.getJSON(url, { parentId: id }, function (response) {
                    districts.empty(); // remove any existing options
                    ward.empty();
                    $(document.createElement('option'))
                            .attr('value', '')
                            .text('- Rỗng -')
                            .appendTo(ward).trigger('chosen:updated');
                    $(response).each(function () {
                        $(document.createElement('option'))
                            .attr('value', this.Id)
                            .text(capitalizeFirstAllWords(this.Name.toLowerCase().replace('huyện', '').replace('quận', '')))
                            .appendTo(districts).trigger('chosen:updated');
                        HideLoading();
                    });
                });
            }
            else {
                districts.empty(); // remove any existing options
                ward.empty();
                $(document.createElement('option'))
                           .attr('value', '')
                           .text('- Rỗng -')
                           .appendTo($(districts)).trigger('chosen:updated');
                $(document.createElement('option'))
                           .attr('value', '')
                           .text('- Rỗng -')
                           .appendTo($(ward)).trigger('chosen:updated');
                HideLoading();
            }
        });

        $("#DistrictId").change(function () {
            ShowLoading();
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            $.getJSON(url, { parentId: id }, function (response) {
                ward.empty(); // remove any existing options
                $(document.createElement('option'))
                       .attr('value', '')
                       .text('- Rỗng -')
                       .appendTo(ward).trigger('chosen:updated');
                $(response).each(function () {
                    $(document.createElement('option'))
                        .attr('value', this.Id)
                        .text(capitalizeFirstAllWords(this.Name.toLowerCase()))
                        .appendTo(ward).trigger('chosen:updated');
                });
                HideLoading();
            });
        });

        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.CompanyName</option>';
                window.parent.ClosePopupAndReloadPageStaffDetail();
                window.parent.ClosePopupAndAppendSelect(option);
            }

        });

        //$("#tabCustomer").tabs({ active: 2 });

        @Model.JavaScriptToRun
        function CloseCurrentPopup(id) {
            //chuyen huong trang theo id lay tu controller
            window.parent.location.href = '/Customer/Detail/' + id;
        }

        $('#CreateCusUser').click(function () {
            if ($('#StartDate').val() == "") {
                alert("chưa nhập ngày bắt đầu");
                return false;
            }
        })

        $('#CreateCustomerRecommend').click(function () {
            if ($('#_StartDate').val() == "") {
                alert("chưa nhập ngày bắt đầu");
                return false;
            }
        })
        $(function () {
            $(".datetype").datepicker({ dateFormat: 'dd/MM/yyyy' });
        });
    </script>
    @Html.ScriptBottom_ChosenStyle()

    <script type="text/javascript">
        function f5tabright() {
            ShowLoading();
            $.ajax({
                url: "/AdviseCard/DetailLeadModal?Id=" + @Model.LeadId+"&isPartial=1" +"&CusId="+@Model.Id,
                method: "get",
                dataType: "html",
                success: function (data) {
                    $("#tabright").html(data)
                },
                complete: function () {
                    HideLoading();




                }
            })
        }
        function DetailLead(Id, isPartial) {
            $("#tabright").html('')
            debugger
            ShowLoading();
            $.ajax({
                url: "/AdviseCard/DetailLeadModal?Id=" + Id + "&isPartial=" + isPartial,
                method: "get",
                dataType: "html",
                success: function (data) {
                    $("#addNewContent").html(data)
                    $('.bs-example-modal-sm').modal()
                    $('.modal-backdrop.fade.in').css('opacity',0)
                    $('.modal-backdrop.fade.in').css('z-index', -1)

                    if (isPartial == 2) {
                        $('#saveLeadModal').remove()

                    }
                    $('#btnCloseAdd,button[data-dismiss=modal]').click(function () {
                        f5tabright()
                    })
                },
                complete: function () {
                    HideLoading();




                }
            })
        }

        $(function () {
            $('[data-rel=tooltip]').tooltip({ container: 'body' });
            f5tabright()
            $('document').keypress(function (e) {
                if (e.which == 27 && $('#tabright').html()!='') {
                    f5tabright()
                }
            });
        });

        $(function () {
            $('#Amount').numberFormat();
            var amountRemain = 0;
            $('input[type=radio][name=TransactionId]').change(function () {
                //console.log(this.value);
                $('#OriginalTransactionId').val(this.value);
                amountRemain = parseFloat($(this).data("remain"));
                //console.log(amountRemain);
                $('#mask-Amount').val(currencyFormat(amountRemain));
                $('#Amount').val(amountRemain);
                $("#Thanhtoan").show();
                $(".alert-required-transactionId").hide();

                if ($(this).data("hasprocesspayment")) {
                    $('#ProcessPaymentId').val($('.ProcessPaymentId:checked').val());
                    var amount = $('.ProcessPaymentId:checked').data("amount");
                    $('#mask-Amount').val(currencyFormat(amount));
                    $('#Amount').val(amount);

                    $('#mask-Amount').attr('readonly', 'readonly');

                    checkNextPaymentDate();
                    $('#NextPaymentDate').val($(this).data("nextpaymentdate"));
                    $('#NextPaymentDate').attr('readonly', 'readonly');
                }
                else {
                    $('#ProcessPaymentId').val(0);
                    $('#mask-Amount').removeAttr('readonly');
                    $('#NextPaymentDate').removeAttr('readonly');
                }
            });

            $('#usingservice').show();
            $('#mask-Amount').blur(function () {
                checkNextPaymentDate();
            });

            $('#mask-Amount').focus(function () {
                $(this).select();
            });

            $('#mask-Amount').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                }
            });

            function checkNextPaymentDate() {
                if (parseFloat($('#Amount').val()) < amountRemain) {
                    $('.NextPaymentDate-container').show();
                    $('#AmountRemain').val(currencyFormat(amountRemain - parseFloat($('#Amount').val())));
                }
                else {
                    $('.NextPaymentDate-container').hide();
                }
            }
        });

        function ResolveLiabilities_OnSuccess(rs) {
            location.reload();
        }

        function checkOnSubmit() {
            if ($('#OriginalTransactionId').val() == '') {
                $(".alert-required-transactionId").show();
                return false;
            }
            else {
                $(".alert-required-transactionId").hide();
                return true;
            }
        }
        //đóng thẻ div tập tin
        function AllowClose() {
            $("#Thanhtoan").hide();
        }

        @*document.getElementById("showTakePhotoForm").onclick = function () {
            var checkbox = document.getElementsByName("UserId");
            for (var i = 0; i < checkbox.length; i++) {
                if (checkbox[i].checked === true) {
                    //alert(checkbox[i].value);
                    $("#modalPayment").modal("hide");
                    OpenPopup('@Url.Action("TakePhoto", "Customer", new {Id = Model.Id })?UserId=' + checkbox[i].value + '&IsPopup=true', 'Chụp hình khách hàng', 0, 420);
                }
            }
        };*@
        function clickActive(elem, id) {
            //  console.log(1111);
            var $this = $(elem);

            var $chekbox = $this.find('input[type="checkbox"]');
            var $label = $this.find('label[name="label_' + id + '"]');
            if ($chekbox.is(':checked')) {
                $chekbox.prop('checked', false);
                $label.removeClass('active');
            } else {
                $chekbox.prop('checked', true);
                $label.addClass('active');
            }
            //$('span[id="count_check_' + id + '"]').text($this.parent().find(' > label.active').length);
        }

    </script>

    <script src="~/Scripts/jquery.signalR-2.4.3.min.js" type="text/javascript"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">
        $(function () {
            var erpHub = $.connection.erpHub;

            // Start the connection.
            $.connection.hub.start().done(function () {

            });

            $('#myModal').on('hidden.bs.modal', function () {
                var checkbox = document.getElementsByName("UserId");
                for (var i = 0; i < checkbox.length; i++) {
                    if (checkbox[i].checked === true) {
                        erpHub.server.loadUrl('/Customer/Client', checkbox[i].value);
                    }
                }
            });

            $('#Edit').submit(function () {
                debugger
                $('#tab1 select,#tab2 select,#tab3 select,#tab4 select,#tab5 select').removeAttr('disabled');
            });
            $('#tab1 .editsection,#tab2 .editsection,#tab3 .editsection,#tab4 .editsection,#tab5 .editsection').click(function () {
                debugger
                $('#tab' + $(this).data('tab')).find('input,select').removeAttr('disabled');
                $('#tab' + $(this).data('tab')).find('input,select').removeAttr('readonly');
            });
            $('#tab1 .savesection,#tab2 .savesection,#tab3 .savesection,#tab4 .savesection,#tab5 .savesection').click(function () {
                debugger
                var form = $('#Edit')[0]
                let tab = new FormData()
                var tabn = $(this).data('tab')
                let valid = false
                tab.append('isLead', $('input[name=isLead]').val() == "True" ? true : false)
                tab.append('LeadId', $('input[name=LeadId]').val())
                tab.append('Id', $('input[name=Id]').val())
                $(form.elements).each(function (index, item) {
                    if ($('#tab' + tabn)[0].contains(item)) {
                        if (item.type == "checkbox") {
                            tab.append(item.name, item.checked ? true : false)

                        } else if (item.type == 'tel' && item.value == '') {
                            //toastr.warning('Ngày bắt đầu không được để trống')
                            item.focus()
                            valid = true
                        }
                        else {
                            tab.append(item.name, item.value)
                        }
                    }
                })
                if (valid == true) {
                    return
                }
                ShowLoading()
                $.ajax({
                    url: "/Customer/SaveTab" + tabn,
                    method: "post",
                    data: tab,
                    processData: false,
                    contentType: false,
                    dataType: "html",
                    success: function (data) {
                        debugger
                        if (data == 1 && tabn != '4' && tabn != '5') {
                            toastr.success('Lưu thành công')
                        } else if (tabn != '4' && tabn != '5') {
                            toastr.warning('Lưu thất bại')
                        } else if (tabn == 4) {
                            $('#CreateCusUserTable').html(data)
                        } else {
                            $('#CreateCustomerRecommendTable').html(data)
                        }
                    },
                    complete: function () {
                        HideLoading();
                    }
                })
                $('#Edit').find('input,select').attr('disabled', 'disabled');
                $('#Edit').find('input,select').attr('readonly', 'readonly');
            });
        });
        $(function () {
            enable_cb();
            $(".name").click(enable_cb);
        });

        function enable_cb() {
            $(".ace").prop("disabled", !this.checked);
            $("#Birthday").prop("disabled", !this.checked);
        }



    </script>

    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
}
@*leadindex js*@
<script>

    function getCookieLeadIndex(name) {
        debugger
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
        else {
            if (name == "pageSize") {
                return 15;
            } else
                return 0;
        }
    }
    function setCookie(name, value, days) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "") + expires + "; path=/";
    }



</script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
@*<script src="~/Scripts/jquery.signalR-2.4.3.min.js" type="text/javascript"></script>
<script src="~/signalr/hubs"></script>*@
@*<script type="text/javascript">
    var hub = $.connection.erpHub;
    hub.client.f5LeadLogs = function (id) {
        debugger
        if (id == @Html.Raw(Model.Id>0? "$('#Id').val()" : "$('#IdLead').val()")) {
            $.ajax({
                url: '/AdviseCard/LeadLogsView?id=' + id+ '@Html.Raw(Model.Id>0? "&isPartial=1" : "&isPartial=0")',
                method: "get",
                dataType: "html",
                success: function (data) {
                    $('#LeadLogsShow').html(data)
                }
            })

        }
    };
    hub.client.LeadLogsMeeting = function (LeadId) {
        debugger
        if (LeadId ==  @Html.Raw(Model.Id>0? "$('#Id').val()" : "$('#IdLead').val()")) {
            $.ajax({
                url: '/AdviseCard/LeadLogsMeetingView?LeadId=' + LeadId+'@Html.Raw(Model.Id>0? "&isPartial=1" : "&isPartial=0")',
                method: "get",
                dataType: "html",
                success: function (data) {
                    $('#LeadLogsMeetingShow').html(data);
                }
            })

        }
    };
    $.connection.hub.start();
    $.connection.hub.disconnected(function () {
        debugger
        console.log('Connection lost, attempting to reconnect.');
        setTimeout(function () {
            debugger
            $.connection.hub.start();
        }, 5000); // Retry connection after 5 seconds
    });
</script>*@
<script>
    function isValidEmail(email) {
        if (email === "") {
            return true;
        }
        var emailRegex = /\S+@@\S+\.\S+/;
        return emailRegex.test(email);
    }

    function isValidMobile(mobile) {
        if (mobile === "") {
            return true;
        }
        var mobileRegex = /^\+?\d+$/;
        return mobileRegex.test(mobile);
    }
</script>


<script>
    //thanh
    var urlParams = new URLSearchParams(window.location.search);
    var detailLeadId = urlParams.get('detailLeadId');
    if (detailLeadId) {
        var url = window.location.href;
        url = url.split('?')[0];
        history.replaceState({}, '', url);
        DetailLead(detailLeadId);
    }
</script>

